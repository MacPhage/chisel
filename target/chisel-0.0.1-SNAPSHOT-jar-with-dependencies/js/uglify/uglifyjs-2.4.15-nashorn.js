"use strict";function array_to_hash(r){for(var t=Object.create(null),n=0;n<r.length;++n)t[r[n]]=!0;return t}function slice(r,t){return Array.prototype.slice.call(r,t||0)}function characters(r){return r.split("")}function member(r,t){for(var n=t.length;--n>=0;)if(t[n]==r)return!0;return!1}function find_if(r,t){for(var n=0,e=t.length;e>n;++n)if(r(t[n]))return t[n]}function repeat_string(r,t){if(0>=t)return"";if(1==t)return r;var n=repeat_string(r,t>>1);return n+=n,1&t&&(n+=r),n}function DefaultsError(r,t){Error.call(this,r),this.msg=r,this.defs=t}function defaults(r,t,n){r===!0&&(r={});var e=r||{};if(n)for(var i in e)e.hasOwnProperty(i)&&!t.hasOwnProperty(i)&&DefaultsError.croak("`"+i+"` is not a supported option",t);for(var i in t)t.hasOwnProperty(i)&&(e[i]=r&&r.hasOwnProperty(i)?r[i]:t[i]);return e}function merge(r,t){for(var n in t)t.hasOwnProperty(n)&&(r[n]=t[n]);return r}function noop(){}function push_uniq(r,t){r.indexOf(t)<0&&r.push(t)}function string_template(r,t){return r.replace(/\{(.+?)\}/g,function(r,n){return t[n]})}function remove(r,t){for(var n=r.length;--n>=0;)r[n]===t&&r.splice(n,1)}function mergeSort(r,t){function n(r,n){for(var e=[],i=0,s=0,u=0;i<r.length&&s<n.length;)e[u++]=t(r[i],n[s])<=0?r[i++]:n[s++];return i<r.length&&e.push.apply(e,r.slice(i)),s<n.length&&e.push.apply(e,n.slice(s)),e}function e(r){if(r.length<=1)return r;var t=Math.floor(r.length/2),i=r.slice(0,t),s=r.slice(t);return i=e(i),s=e(s),n(i,s)}return r.length<2?r.slice():e(r)}function set_difference(r,t){return r.filter(function(r){return t.indexOf(r)<0})}function set_intersection(r,t){return r.filter(function(r){return t.indexOf(r)>=0})}function makePredicate(r){function t(r){if(1==r.length)return n+="return str === "+JSON.stringify(r[0])+";";n+="switch(str){";for(var t=0;t<r.length;++t)n+="case "+JSON.stringify(r[t])+":";n+="return true}return false;"}r instanceof Array||(r=r.split(" "));var n="",e=[];r:for(var i=0;i<r.length;++i){for(var s=0;s<e.length;++s)if(e[s][0].length==r[i].length){e[s].push(r[i]);continue r}e.push([r[i]])}if(e.length>3){e.sort(function(r,t){return t.length-r.length}),n+="switch(str.length){";for(var i=0;i<e.length;++i){var u=e[i];n+="case "+u[0].length+":",t(u)}n+="}"}else t(r);return new Function("str",n)}function all(r,t){for(var n=r.length;--n>=0;)if(!t(r[n]))return!1;return!0}function Dictionary(){this._values=Object.create(null),this._size=0}DefaultsError.prototype=Object.create(Error.prototype),DefaultsError.prototype.constructor=DefaultsError,DefaultsError.croak=function(r,t){throw new DefaultsError(r,t)};var MAP=function(){function r(r,s,u){function o(){var o=s(r[f],f),h=o instanceof e;return h&&(o=o.v),o instanceof t?(o=o.v,o instanceof n?c.push.apply(c,u?o.v.slice().reverse():o.v):c.push(o)):o!==i&&(o instanceof n?a.push.apply(a,u?o.v.slice().reverse():o.v):a.push(o)),h}var f,a=[],c=[];if(r instanceof Array)if(u){for(f=r.length;--f>=0&&!o(););a.reverse(),c.reverse()}else for(f=0;f<r.length&&!o();++f);else for(f in r)if(r.hasOwnProperty(f)&&o())break;return c.concat(a)}function t(r){this.v=r}function n(r){this.v=r}function e(r){this.v=r}r.at_top=function(r){return new t(r)},r.splice=function(r){return new n(r)},r.last=function(r){return new e(r)};var i=r.skip={};return r}();Dictionary.prototype={set:function(r,t){return this.has(r)||++this._size,this._values["$"+r]=t,this},add:function(r,t){return this.has(r)?this.get(r).push(t):this.set(r,[t]),this},get:function(r){return this._values["$"+r]},del:function(r){return this.has(r)&&(--this._size,delete this._values["$"+r]),this},has:function(r){return"$"+r in this._values},each:function(r){for(var t in this._values)r(this._values[t],t.substr(1))},size:function(){return this._size},map:function(r){var t=[];for(var n in this._values)t.push(r(this._values[n],n.substr(1)));return t}};

"use strict";function DEFNODE(t,e,n,o){arguments.length<4&&(o=AST_Node),e=e?e.split(/\s+/):[];var i=e;o&&o.PROPS&&(e=e.concat(o.PROPS));for(var a="return function AST_"+t+"(props){ if (props) { ",r=e.length;--r>=0;)a+="this."+e[r]+" = props."+e[r]+";";var s=o&&new o;(s&&s.initialize||n&&n.initialize)&&(a+="this.initialize();"),a+="}}";var l=new Function(a)();if(s&&(l.prototype=s,l.BASE=o),o&&o.SUBCLASSES.push(l),l.prototype.CTOR=l,l.PROPS=e||null,l.SELF_PROPS=i,l.SUBCLASSES=[],t&&(l.prototype.TYPE=l.TYPE=t),n)for(r in n)n.hasOwnProperty(r)&&(/^\$/.test(r)?l[r.substr(1)]=n[r]:l.prototype[r]=n[r]);return l.DEFMETHOD=function(t,e){this.prototype[t]=e},l}function walk_body(t,e){t.body instanceof AST_Statement?t.body._walk(e):t.body.forEach(function(t){t._walk(e)})}function TreeWalker(t){this.visit=t,this.stack=[]}var AST_Token=DEFNODE("Token","type value line col pos endpos nlb comments_before file",{},null),AST_Node=DEFNODE("Node","start end",{clone:function(){return new this.CTOR(this)},$documentation:"Base class of all AST nodes",$propdoc:{start:"[AST_Token] The first token of this node",end:"[AST_Token] The last token of this node"},_walk:function(t){return t._visit(this)},walk:function(t){return this._walk(t)}},null);AST_Node.warn_function=null,AST_Node.warn=function(t,e){AST_Node.warn_function&&AST_Node.warn_function(string_template(t,e))};var AST_Statement=DEFNODE("Statement",null,{$documentation:"Base class of all statements"}),AST_Debugger=DEFNODE("Debugger",null,{$documentation:"Represents a debugger statement"},AST_Statement),AST_Directive=DEFNODE("Directive","value scope",{$documentation:'Represents a directive, like "use strict";',$propdoc:{value:"[string] The value of this directive as a plain string (it's not an AST_String!)",scope:"[AST_Scope/S] The scope that this directive affects"}},AST_Statement),AST_SimpleStatement=DEFNODE("SimpleStatement","body",{$documentation:"A statement consisting of an expression, i.e. a = 1 + 2",$propdoc:{body:"[AST_Node] an expression node (should not be instanceof AST_Statement)"},_walk:function(t){return t._visit(this,function(){this.body._walk(t)})}},AST_Statement),AST_Block=DEFNODE("Block","body",{$documentation:"A body of statements (usually bracketed)",$propdoc:{body:"[AST_Statement*] an array of statements"},_walk:function(t){return t._visit(this,function(){walk_body(this,t)})}},AST_Statement),AST_BlockStatement=DEFNODE("BlockStatement",null,{$documentation:"A block statement"},AST_Block),AST_EmptyStatement=DEFNODE("EmptyStatement",null,{$documentation:"The empty statement (empty block or simply a semicolon)",_walk:function(t){return t._visit(this)}},AST_Statement),AST_StatementWithBody=DEFNODE("StatementWithBody","body",{$documentation:"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`",$propdoc:{body:"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement"},_walk:function(t){return t._visit(this,function(){this.body._walk(t)})}},AST_Statement),AST_LabeledStatement=DEFNODE("LabeledStatement","label",{$documentation:"Statement with a label",$propdoc:{label:"[AST_Label] a label definition"},_walk:function(t){return t._visit(this,function(){this.label._walk(t),this.body._walk(t)})}},AST_StatementWithBody),AST_IterationStatement=DEFNODE("IterationStatement",null,{$documentation:"Internal class.  All loops inherit from it."},AST_StatementWithBody),AST_DWLoop=DEFNODE("DWLoop","condition",{$documentation:"Base class for do/while statements",$propdoc:{condition:"[AST_Node] the loop condition.  Should not be instanceof AST_Statement"},_walk:function(t){return t._visit(this,function(){this.condition._walk(t),this.body._walk(t)})}},AST_IterationStatement),AST_Do=DEFNODE("Do",null,{$documentation:"A `do` statement"},AST_DWLoop),AST_While=DEFNODE("While",null,{$documentation:"A `while` statement"},AST_DWLoop),AST_For=DEFNODE("For","init condition step",{$documentation:"A `for` statement",$propdoc:{init:"[AST_Node?] the `for` initialization code, or null if empty",condition:"[AST_Node?] the `for` termination clause, or null if empty",step:"[AST_Node?] the `for` update clause, or null if empty"},_walk:function(t){return t._visit(this,function(){this.init&&this.init._walk(t),this.condition&&this.condition._walk(t),this.step&&this.step._walk(t),this.body._walk(t)})}},AST_IterationStatement),AST_ForIn=DEFNODE("ForIn","init name object",{$documentation:"A `for ... in` statement",$propdoc:{init:"[AST_Node] the `for/in` initialization code",name:"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var",object:"[AST_Node] the object that we're looping through"},_walk:function(t){return t._visit(this,function(){this.init._walk(t),this.object._walk(t),this.body._walk(t)})}},AST_IterationStatement),AST_With=DEFNODE("With","expression",{$documentation:"A `with` statement",$propdoc:{expression:"[AST_Node] the `with` expression"},_walk:function(t){return t._visit(this,function(){this.expression._walk(t),this.body._walk(t)})}},AST_StatementWithBody),AST_Scope=DEFNODE("Scope","directives variables functions uses_with uses_eval parent_scope enclosed cname",{$documentation:"Base class for all statements introducing a lexical scope",$propdoc:{directives:"[string*/S] an array of directives declared in this scope",variables:"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope",functions:"[Object/S] like `variables`, but only lists function declarations",uses_with:"[boolean/S] tells whether this scope uses the `with` statement",uses_eval:"[boolean/S] tells whether this scope contains a direct call to the global `eval`",parent_scope:"[AST_Scope?/S] link to the parent scope",enclosed:"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes",cname:"[integer/S] current index for mangling variables (used internally by the mangler)"}},AST_Block),AST_Toplevel=DEFNODE("Toplevel","globals",{$documentation:"The toplevel scope",$propdoc:{globals:"[Object/S] a map of name -> SymbolDef for all undeclared names"},wrap_enclose:function(t){var e=this,n=[],o=[];t.forEach(function(t){var e=t.lastIndexOf(":");n.push(t.substr(0,e)),o.push(t.substr(e+1))});var i="(function("+o.join(",")+"){ '$ORIG'; })("+n.join(",")+")";return i=parse(i),i=i.transform(new TreeTransformer(function(t){return t instanceof AST_Directive&&"$ORIG"==t.value?MAP.splice(e.body):void 0}))},wrap_commonjs:function(t,e){var n=this,o=[];e&&(n.figure_out_scope(),n.walk(new TreeWalker(function(t){t instanceof AST_SymbolDeclaration&&t.definition().global&&(find_if(function(e){return e.name==t.name},o)||o.push(t))})));var i="(function(exports, global){ global['"+t+"'] = exports; '$ORIG'; '$EXPORTS'; }({}, (function(){return this}())))";return i=parse(i),i=i.transform(new TreeTransformer(function(t){if(t instanceof AST_SimpleStatement&&(t=t.body,t instanceof AST_String))switch(t.getValue()){case"$ORIG":return MAP.splice(n.body);case"$EXPORTS":var e=[];return o.forEach(function(t){e.push(new AST_SimpleStatement({body:new AST_Assign({left:new AST_Sub({expression:new AST_SymbolRef({name:"exports"}),property:new AST_String({value:t.name})}),operator:"=",right:new AST_SymbolRef(t)})}))}),MAP.splice(e)}}))}},AST_Scope),AST_Lambda=DEFNODE("Lambda","name argnames uses_arguments",{$documentation:"Base class for functions",$propdoc:{name:"[AST_SymbolDeclaration?] the name of this function",argnames:"[AST_SymbolFunarg*] array of function arguments",uses_arguments:"[boolean/S] tells whether this function accesses the arguments array"},_walk:function(t){return t._visit(this,function(){this.name&&this.name._walk(t),this.argnames.forEach(function(e){e._walk(t)}),walk_body(this,t)})}},AST_Scope),AST_Accessor=DEFNODE("Accessor",null,{$documentation:"A setter/getter function.  The `name` property is always null."},AST_Lambda),AST_Function=DEFNODE("Function",null,{$documentation:"A function expression"},AST_Lambda),AST_Defun=DEFNODE("Defun",null,{$documentation:"A function definition"},AST_Lambda),AST_Jump=DEFNODE("Jump",null,{$documentation:"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)"},AST_Statement),AST_Exit=DEFNODE("Exit","value",{$documentation:"Base class for “exits” (`return` and `throw`)",$propdoc:{value:"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return"},_walk:function(t){return t._visit(this,this.value&&function(){this.value._walk(t)})}},AST_Jump),AST_Return=DEFNODE("Return",null,{$documentation:"A `return` statement"},AST_Exit),AST_Throw=DEFNODE("Throw",null,{$documentation:"A `throw` statement"},AST_Exit),AST_LoopControl=DEFNODE("LoopControl","label",{$documentation:"Base class for loop control statements (`break` and `continue`)",$propdoc:{label:"[AST_LabelRef?] the label, or null if none"},_walk:function(t){return t._visit(this,this.label&&function(){this.label._walk(t)})}},AST_Jump),AST_Break=DEFNODE("Break",null,{$documentation:"A `break` statement"},AST_LoopControl),AST_Continue=DEFNODE("Continue",null,{$documentation:"A `continue` statement"},AST_LoopControl),AST_If=DEFNODE("If","condition alternative",{$documentation:"A `if` statement",$propdoc:{condition:"[AST_Node] the `if` condition",alternative:"[AST_Statement?] the `else` part, or null if not present"},_walk:function(t){return t._visit(this,function(){this.condition._walk(t),this.body._walk(t),this.alternative&&this.alternative._walk(t)})}},AST_StatementWithBody),AST_Switch=DEFNODE("Switch","expression",{$documentation:"A `switch` statement",$propdoc:{expression:"[AST_Node] the `switch` “discriminant”"},_walk:function(t){return t._visit(this,function(){this.expression._walk(t),walk_body(this,t)})}},AST_Block),AST_SwitchBranch=DEFNODE("SwitchBranch",null,{$documentation:"Base class for `switch` branches"},AST_Block),AST_Default=DEFNODE("Default",null,{$documentation:"A `default` switch branch"},AST_SwitchBranch),AST_Case=DEFNODE("Case","expression",{$documentation:"A `case` switch branch",$propdoc:{expression:"[AST_Node] the `case` expression"},_walk:function(t){return t._visit(this,function(){this.expression._walk(t),walk_body(this,t)})}},AST_SwitchBranch),AST_Try=DEFNODE("Try","bcatch bfinally",{$documentation:"A `try` statement",$propdoc:{bcatch:"[AST_Catch?] the catch block, or null if not present",bfinally:"[AST_Finally?] the finally block, or null if not present"},_walk:function(t){return t._visit(this,function(){walk_body(this,t),this.bcatch&&this.bcatch._walk(t),this.bfinally&&this.bfinally._walk(t)})}},AST_Block),AST_Catch=DEFNODE("Catch","argname",{$documentation:"A `catch` node; only makes sense as part of a `try` statement",$propdoc:{argname:"[AST_SymbolCatch] symbol for the exception"},_walk:function(t){return t._visit(this,function(){this.argname._walk(t),walk_body(this,t)})}},AST_Block),AST_Finally=DEFNODE("Finally",null,{$documentation:"A `finally` node; only makes sense as part of a `try` statement"},AST_Block),AST_Definitions=DEFNODE("Definitions","definitions",{$documentation:"Base class for `var` or `const` nodes (variable declarations/initializations)",$propdoc:{definitions:"[AST_VarDef*] array of variable definitions"},_walk:function(t){return t._visit(this,function(){this.definitions.forEach(function(e){e._walk(t)})})}},AST_Statement),AST_Var=DEFNODE("Var",null,{$documentation:"A `var` statement"},AST_Definitions),AST_Const=DEFNODE("Const",null,{$documentation:"A `const` statement"},AST_Definitions),AST_VarDef=DEFNODE("VarDef","name value",{$documentation:"A variable declaration; only appears in a AST_Definitions node",$propdoc:{name:"[AST_SymbolVar|AST_SymbolConst] name of the variable",value:"[AST_Node?] initializer, or null of there's no initializer"},_walk:function(t){return t._visit(this,function(){this.name._walk(t),this.value&&this.value._walk(t)})}}),AST_Call=DEFNODE("Call","expression args",{$documentation:"A function call expression",$propdoc:{expression:"[AST_Node] expression to invoke as function",args:"[AST_Node*] array of arguments"},_walk:function(t){return t._visit(this,function(){this.expression._walk(t),this.args.forEach(function(e){e._walk(t)})})}}),AST_New=DEFNODE("New",null,{$documentation:"An object instantiation.  Derives from a function call since it has exactly the same properties"},AST_Call),AST_Seq=DEFNODE("Seq","car cdr",{$documentation:"A sequence expression (two comma-separated expressions)",$propdoc:{car:"[AST_Node] first element in sequence",cdr:"[AST_Node] second element in sequence"},$cons:function(t,e){var n=new AST_Seq(t);return n.car=t,n.cdr=e,n},$from_array:function(t){if(0==t.length)return null;if(1==t.length)return t[0].clone();for(var e=null,n=t.length;--n>=0;)e=AST_Seq.cons(t[n],e);for(var o=e;o;){if(o.cdr&&!o.cdr.cdr){o.cdr=o.cdr.car;break}o=o.cdr}return e},to_array:function(){for(var t=this,e=[];t;){if(e.push(t.car),t.cdr&&!(t.cdr instanceof AST_Seq)){e.push(t.cdr);break}t=t.cdr}return e},add:function(t){for(var e=this;e;){if(!(e.cdr instanceof AST_Seq)){var n=AST_Seq.cons(e.cdr,t);return e.cdr=n}e=e.cdr}},_walk:function(t){return t._visit(this,function(){this.car._walk(t),this.cdr&&this.cdr._walk(t)})}}),AST_PropAccess=DEFNODE("PropAccess","expression property",{$documentation:'Base class for property access expressions, i.e. `a.foo` or `a["foo"]`',$propdoc:{expression:"[AST_Node] the “container” expression",property:"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node"}}),AST_Dot=DEFNODE("Dot",null,{$documentation:"A dotted property access expression",_walk:function(t){return t._visit(this,function(){this.expression._walk(t)})}},AST_PropAccess),AST_Sub=DEFNODE("Sub",null,{$documentation:'Index-style property access, i.e. `a["foo"]`',_walk:function(t){return t._visit(this,function(){this.expression._walk(t),this.property._walk(t)})}},AST_PropAccess),AST_Unary=DEFNODE("Unary","operator expression",{$documentation:"Base class for unary expressions",$propdoc:{operator:"[string] the operator",expression:"[AST_Node] expression that this unary operator applies to"},_walk:function(t){return t._visit(this,function(){this.expression._walk(t)})}}),AST_UnaryPrefix=DEFNODE("UnaryPrefix",null,{$documentation:"Unary prefix expression, i.e. `typeof i` or `++i`"},AST_Unary),AST_UnaryPostfix=DEFNODE("UnaryPostfix",null,{$documentation:"Unary postfix expression, i.e. `i++`"},AST_Unary),AST_Binary=DEFNODE("Binary","left operator right",{$documentation:"Binary expression, i.e. `a + b`",$propdoc:{left:"[AST_Node] left-hand side expression",operator:"[string] the operator",right:"[AST_Node] right-hand side expression"},_walk:function(t){return t._visit(this,function(){this.left._walk(t),this.right._walk(t)})}}),AST_Conditional=DEFNODE("Conditional","condition consequent alternative",{$documentation:"Conditional expression using the ternary operator, i.e. `a ? b : c`",$propdoc:{condition:"[AST_Node]",consequent:"[AST_Node]",alternative:"[AST_Node]"},_walk:function(t){return t._visit(this,function(){this.condition._walk(t),this.consequent._walk(t),this.alternative._walk(t)})}}),AST_Assign=DEFNODE("Assign",null,{$documentation:"An assignment expression — `a = b + 5`"},AST_Binary),AST_Array=DEFNODE("Array","elements",{$documentation:"An array literal",$propdoc:{elements:"[AST_Node*] array of elements"},_walk:function(t){return t._visit(this,function(){this.elements.forEach(function(e){e._walk(t)})})}}),AST_Object=DEFNODE("Object","properties",{$documentation:"An object literal",$propdoc:{properties:"[AST_ObjectProperty*] array of properties"},_walk:function(t){return t._visit(this,function(){this.properties.forEach(function(e){e._walk(t)})})}}),AST_ObjectProperty=DEFNODE("ObjectProperty","key value",{$documentation:"Base class for literal object properties",$propdoc:{key:"[string] the property name converted to a string for ObjectKeyVal.  For setters and getters this is an arbitrary AST_Node.",value:"[AST_Node] property value.  For setters and getters this is an AST_Function."},_walk:function(t){return t._visit(this,function(){this.value._walk(t)})}}),AST_ObjectKeyVal=DEFNODE("ObjectKeyVal",null,{$documentation:"A key: value object property"},AST_ObjectProperty),AST_ObjectSetter=DEFNODE("ObjectSetter",null,{$documentation:"An object setter property"},AST_ObjectProperty),AST_ObjectGetter=DEFNODE("ObjectGetter",null,{$documentation:"An object getter property"},AST_ObjectProperty),AST_Symbol=DEFNODE("Symbol","scope name thedef",{$propdoc:{name:"[string] name of this symbol",scope:"[AST_Scope/S] the current scope (not necessarily the definition scope)",thedef:"[SymbolDef/S] the definition of this symbol"},$documentation:"Base class for all symbols"}),AST_SymbolAccessor=DEFNODE("SymbolAccessor",null,{$documentation:"The name of a property accessor (setter/getter function)"},AST_Symbol),AST_SymbolDeclaration=DEFNODE("SymbolDeclaration","init",{$documentation:"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)",$propdoc:{init:"[AST_Node*/S] array of initializers for this declaration."}},AST_Symbol),AST_SymbolVar=DEFNODE("SymbolVar",null,{$documentation:"Symbol defining a variable"},AST_SymbolDeclaration),AST_SymbolConst=DEFNODE("SymbolConst",null,{$documentation:"A constant declaration"},AST_SymbolDeclaration),AST_SymbolFunarg=DEFNODE("SymbolFunarg",null,{$documentation:"Symbol naming a function argument"},AST_SymbolVar),AST_SymbolDefun=DEFNODE("SymbolDefun",null,{$documentation:"Symbol defining a function"},AST_SymbolDeclaration),AST_SymbolLambda=DEFNODE("SymbolLambda",null,{$documentation:"Symbol naming a function expression"},AST_SymbolDeclaration),AST_SymbolCatch=DEFNODE("SymbolCatch",null,{$documentation:"Symbol naming the exception in catch"},AST_SymbolDeclaration),AST_Label=DEFNODE("Label","references",{$documentation:"Symbol naming a label (declaration)",$propdoc:{references:"[AST_LoopControl*] a list of nodes referring to this label"},initialize:function(){this.references=[],this.thedef=this}},AST_Symbol),AST_SymbolRef=DEFNODE("SymbolRef",null,{$documentation:"Reference to some symbol (not definition/declaration)"},AST_Symbol),AST_LabelRef=DEFNODE("LabelRef",null,{$documentation:"Reference to a label symbol"},AST_Symbol),AST_This=DEFNODE("This",null,{$documentation:"The `this` symbol"},AST_Symbol),AST_Constant=DEFNODE("Constant",null,{$documentation:"Base class for all constants",getValue:function(){return this.value}}),AST_String=DEFNODE("String","value",{$documentation:"A string literal",$propdoc:{value:"[string] the contents of this string"}},AST_Constant),AST_Number=DEFNODE("Number","value",{$documentation:"A number literal",$propdoc:{value:"[number] the numeric value"}},AST_Constant),AST_RegExp=DEFNODE("RegExp","value",{$documentation:"A regexp literal",$propdoc:{value:"[RegExp] the actual regexp"}},AST_Constant),AST_Atom=DEFNODE("Atom",null,{$documentation:"Base class for atoms"},AST_Constant),AST_Null=DEFNODE("Null",null,{$documentation:"The `null` atom",value:null},AST_Atom),AST_NaN=DEFNODE("NaN",null,{$documentation:"The impossible value",value:0/0},AST_Atom),AST_Undefined=DEFNODE("Undefined",null,{$documentation:"The `undefined` value",value:void 0},AST_Atom),AST_Hole=DEFNODE("Hole",null,{$documentation:"A hole in an array",value:void 0},AST_Atom),AST_Infinity=DEFNODE("Infinity",null,{$documentation:"The `Infinity` value",value:1/0},AST_Atom),AST_Boolean=DEFNODE("Boolean",null,{$documentation:"Base class for booleans"},AST_Atom),AST_False=DEFNODE("False",null,{$documentation:"The `false` atom",value:!1},AST_Boolean),AST_True=DEFNODE("True",null,{$documentation:"The `true` atom",value:!0},AST_Boolean);TreeWalker.prototype={_visit:function(t,e){this.stack.push(t);var n=this.visit(t,e?function(){e.call(t)}:noop);return!n&&e&&e.call(t),this.stack.pop(),n},parent:function(t){return this.stack[this.stack.length-2-(t||0)]},push:function(t){this.stack.push(t)},pop:function(){return this.stack.pop()},self:function(){return this.stack[this.stack.length-1]},find_parent:function(t){for(var e=this.stack,n=e.length;--n>=0;){var o=e[n];if(o instanceof t)return o}},has_directive:function(t){return this.find_parent(AST_Scope).has_directive(t)},in_boolean_context:function(){for(var t=this.stack,e=t.length,n=t[--e];e>0;){var o=t[--e];if(o instanceof AST_If&&o.condition===n||o instanceof AST_Conditional&&o.condition===n||o instanceof AST_DWLoop&&o.condition===n||o instanceof AST_For&&o.condition===n||o instanceof AST_UnaryPrefix&&"!"==o.operator&&o.expression===n)return!0;if(!(o instanceof AST_Binary)||"&&"!=o.operator&&"||"!=o.operator)return!1;n=o}},loopcontrol_target:function(t){var e=this.stack;if(t)for(var n=e.length;--n>=0;){var o=e[n];if(o instanceof AST_LabeledStatement&&o.label.name==t.name)return o.body}else for(var n=e.length;--n>=0;){var o=e[n];if(o instanceof AST_Switch||o instanceof AST_IterationStatement)return o}}};

"use strict";function is_letter(u){return u>=97&&122>=u||u>=65&&90>=u||u>=170&&UNICODE.letter.test(String.fromCharCode(u))}function is_digit(u){return u>=48&&57>=u}function is_alphanumeric_char(u){return is_digit(u)||is_letter(u)}function is_unicode_combining_mark(u){return UNICODE.non_spacing_mark.test(u)||UNICODE.space_combining_mark.test(u)}function is_unicode_connector_punctuation(u){return UNICODE.connector_punctuation.test(u)}function is_identifier(u){return!RESERVED_WORDS(u)&&/^[a-z_$][a-z0-9_$]*$/i.test(u)}function is_identifier_start(u){return 36==u||95==u||is_letter(u)}function is_identifier_char(u){var e=u.charCodeAt(0);return is_identifier_start(e)||is_digit(e)||8204==e||8205==e||is_unicode_combining_mark(u)||is_unicode_connector_punctuation(u)}function is_identifier_string(u){return/^[a-z_$][a-z0-9_$]*$/i.test(u)}function parse_js_number(u){return RE_HEX_NUMBER.test(u)?parseInt(u.substr(2),16):RE_OCT_NUMBER.test(u)?parseInt(u.substr(1),8):RE_DEC_NUMBER.test(u)?parseFloat(u):void 0}function JS_Parse_Error(u,e,n,t){this.message=u,this.line=e,this.col=n,this.pos=t,this.stack=(new Error).stack}function js_error(u,e,n,t,r){throw new JS_Parse_Error(u,n,t,r)}function is_token(u,e,n){return u.type==e&&(null==n||u.value==n)}function tokenizer(u,e,n){function t(){return m.text.charAt(m.pos)}function r(u,e){var n=m.text.charAt(m.pos++);if(u&&!n)throw EX_EOF;return"\n"==n?(m.newline_before=m.newline_before||!e,++m.line,m.col=0):++m.col,n}function o(u){for(;u-->0;)r()}function a(u){return m.text.substr(m.pos,u.length)==u}function i(u,e){var n=m.text.indexOf(u,m.pos);if(e&&-1==n)throw EX_EOF;return n}function A(){m.tokline=m.line,m.tokcol=m.col,m.tokpos=m.pos}function c(u,n,t){m.regex_allowed="operator"==u&&!UNARY_POSTFIX(n)||"keyword"==u&&KEYWORDS_BEFORE_EXPRESSION(n)||"punc"==u&&PUNC_BEFORE_EXPRESSION(n),w="punc"==u&&"."==n;var r={type:u,value:n,line:m.tokline,col:m.tokcol,pos:m.tokpos,endpos:m.pos,nlb:m.newline_before,file:e};if(!t){r.comments_before=m.comments_before,m.comments_before=[];for(var o=0,a=r.comments_before.length;a>o;o++)r.nlb=r.nlb||r.comments_before[o].nlb}return m.newline_before=!1,new AST_Token(r)}function s(){for(;WHITESPACE_CHARS(t());)r()}function l(u){for(var e,n="",o=0;(e=t())&&u(e,o++);)n+=r();return n}function C(u){js_error(u,e,m.tokline,m.tokcol,m.tokpos)}function E(u){var e=!1,n=!1,t=!1,r="."==u,o=l(function(o,a){var i=o.charCodeAt(0);switch(i){case 120:case 88:return t?!1:t=!0;case 101:case 69:return t?!0:e?!1:e=n=!0;case 45:return n||0==a&&!u;case 43:return n;case n=!1,46:return r||t||e?!1:r=!0}return is_alphanumeric_char(i)});u&&(o=u+o);var a=parse_js_number(o);return isNaN(a)?void C("Invalid syntax: "+o):c("num",a)}function f(u){var e=r(!0,u);switch(e.charCodeAt(0)){case 110:return"\n";case 114:return"\r";case 116:return"	";case 98:return"\b";case 118:return"";case 102:return"\f";case 48:return"\x00";case 120:return String.fromCharCode(B(2));case 117:return String.fromCharCode(B(4));case 10:return"";default:return e}}function B(u){for(var e=0;u>0;--u){var n=parseInt(r(!0),16);isNaN(n)&&C("Invalid hex-character pattern in string"),e=e<<4|n}return e}function F(u){var e,n=m.regex_allowed,t=i("\n");return-1==t?(e=m.text.substr(m.pos),m.pos=m.text.length):(e=m.text.substring(m.pos,t),m.pos=t),m.comments_before.push(c(u,e,!0)),m.regex_allowed=n,k()}function D(){for(var u,e,n=!1,o="",a=!1;null!=(u=t());)if(n)"u"!=u&&C("Expecting UnicodeEscapeSequence -- uXXXX"),u=f(),is_identifier_char(u)||C("Unicode char: "+u.charCodeAt(0)+" is not valid in identifier"),o+=u,n=!1;else if("\\"==u)a=n=!0,r();else{if(!is_identifier_char(u))break;o+=r()}return KEYWORDS(o)&&a&&(e=o.charCodeAt(0).toString(16).toUpperCase(),o="\\u"+"0000".substr(e.length)+e+o.slice(1)),o}function _(u){function e(u){if(!t())return u;var n=u+t();return OPERATORS(n)?(r(),e(n)):u}return c("operator",e(u||r()))}function d(){switch(r(),t()){case"/":return r(),F("comment1");case"*":return r(),b()}return m.regex_allowed?T(""):_("/")}function p(){return r(),is_digit(t().charCodeAt(0))?E("."):c("punc",".")}function S(){var u=D();return w?c("name",u):KEYWORDS_ATOM(u)?c("atom",u):KEYWORDS(u)?OPERATORS(u)?c("operator",u):c("keyword",u):c("name",u)}function v(u,e){return function(n){try{return e(n)}catch(t){if(t!==EX_EOF)throw t;C(u)}}}function k(u){if(null!=u)return T(u);if(s(),A(),n){if(a("<!--"))return o(4),F("comment3");if(a("-->")&&m.newline_before)return o(3),F("comment4")}var e=t();if(!e)return c("eof");var i=e.charCodeAt(0);switch(i){case 34:case 39:return h();case 46:return p();case 47:return d()}return is_digit(i)?E():PUNC_CHARS(e)?c("punc",r()):OPERATOR_CHARS(e)?_():92==i||is_identifier_start(i)?S():void C("Unexpected character '"+e+"'")}var m={text:u.replace(/\r\n?|[\n\u2028\u2029]/g,"\n").replace(/\uFEFF/g,""),filename:e,pos:0,tokpos:0,line:1,tokline:0,col:0,tokcol:0,newline_before:!1,regex_allowed:!1,comments_before:[]},w=!1,h=v("Unterminated string constant",function(){for(var u=r(),e="";;){var n=r(!0);if("\\"==n){var t=0,o=null;n=l(function(u){if(u>="0"&&"7">=u){if(!o)return o=u,++t;if("3">=o&&2>=t)return++t;if(o>="4"&&1>=t)return++t}return!1}),n=t>0?String.fromCharCode(parseInt(n,8)):f(!0)}else if(n==u)break;e+=n}return c("string",e)}),b=v("Unterminated multiline comment",function(){var u=m.regex_allowed,e=i("*/",!0),n=m.text.substring(m.pos,e),t=n.split("\n"),r=t.length;m.pos=e+2,m.line+=r-1,r>1?m.col=t[r-1].length:m.col+=t[r-1].length,m.col+=2;var o=m.newline_before=m.newline_before||n.indexOf("\n")>=0;return m.comments_before.push(c("comment2",n,!0)),m.regex_allowed=u,m.newline_before=o,k()}),T=v("Unterminated regular expression",function(u){for(var e,n=!1,t=!1;e=r(!0);)if(n)u+="\\"+e,n=!1;else if("["==e)t=!0,u+=e;else if("]"==e&&t)t=!1,u+=e;else{if("/"==e&&!t)break;"\\"==e?n=!0:u+=e}var o=D();return c("regexp",new RegExp(u,o))});return k.context=function(u){return u&&(m=u),m},k}function parse(u,e){function n(u,e){return is_token(U.token,u,e)}function t(){return U.peeked||(U.peeked=U.input())}function r(){return U.prev=U.token,U.peeked?(U.token=U.peeked,U.peeked=null):U.token=U.input(),U.in_directives=U.in_directives&&("string"==U.token.type||n("punc",";")),U.token}function o(){return U.prev}function a(u,e,n,t){var r=U.input.context();js_error(u,r.filename,null!=e?e:r.tokline,null!=n?n:r.tokcol,null!=t?t:r.tokpos)}function i(u,e){a(e,u.line,u.col)}function A(u){null==u&&(u=U.token),i(u,"Unexpected token: "+u.type+" ("+u.value+")")}function c(u,e){return n(u,e)?r():void i(U.token,"Unexpected token "+U.token.type+" «"+U.token.value+"», expected "+u+" «"+e+"»")}function s(u){return c("punc",u)}function l(){return!e.strict&&(U.token.nlb||n("eof")||n("punc","}"))}function C(){n("punc",";")?r():l()||A()}function E(){s("(");var u=J(!0);return s(")"),u}function f(u){return function(){var e=U.token,n=u(),t=o();return n.start=e,n.end=t,n}}function B(){(n("operator","/")||n("operator","/="))&&(U.peeked=null,U.token=U.input(U.token.value.substr(1)))}function F(){var u=O(AST_Label);find_if(function(e){return e.name==u.name},U.labels)&&a("Label "+u.name+" defined twice"),s(":"),U.labels.push(u);var e=W();return U.labels.pop(),e instanceof AST_IterationStatement||u.references.forEach(function(e){e instanceof AST_Continue&&(e=e.label.start,a("Continue label `"+u.name+"` refers to non-IterationStatement.",e.line,e.col,e.pos))}),new AST_LabeledStatement({body:e,label:u})}function D(u){return new AST_SimpleStatement({body:(u=J(!0),C(),u)})}function _(u){var e,n=null;l()||(n=O(AST_LabelRef,!0)),null!=n?(e=find_if(function(u){return u.name==n.name},U.labels),e||a("Undefined label "+n.name),n.thedef=e):0==U.in_loop&&a(u.TYPE+" not inside a loop or switch"),C();var t=new u({label:n});return e&&e.references.push(t),t}function d(){s("(");var u=null;return!n("punc",";")&&(u=n("keyword","var")?(r(),Y(!0)):J(!0,!0),n("operator","in"))?(u instanceof AST_Var&&u.definitions.length>1&&a("Only one variable declaration allowed in for..in loop"),r(),S(u)):p(u)}function p(u){s(";");var e=n("punc",";")?null:J(!0);s(";");var t=n("punc",")")?null:J(!0);return s(")"),new AST_For({init:u,condition:e,step:t,body:I(W)})}function S(u){var e=u instanceof AST_Var?u.definitions[0].name:null,n=J(!0);return s(")"),new AST_ForIn({init:u,name:e,object:n,body:I(W)})}function v(){var u=E(),e=W(),t=null;return n("keyword","else")&&(r(),t=W()),new AST_If({condition:u,body:e,alternative:t})}function k(){s("{");for(var u=[];!n("punc","}");)n("eof")&&A(),u.push(W());return r(),u}function m(){s("{");for(var u,e=[],t=null,a=null;!n("punc","}");)n("eof")&&A(),n("keyword","case")?(a&&(a.end=o()),t=[],a=new AST_Case({start:(u=U.token,r(),u),expression:J(!0),body:t}),e.push(a),s(":")):n("keyword","default")?(a&&(a.end=o()),t=[],a=new AST_Default({start:(u=U.token,r(),s(":"),u),body:t}),e.push(a)):(t||A(),t.push(W()));return a&&(a.end=o()),r(),e}function w(){var u=k(),e=null,t=null;if(n("keyword","catch")){var i=U.token;r(),s("(");var A=O(AST_SymbolCatch);s(")"),e=new AST_Catch({start:i,argname:A,body:k(),end:o()})}if(n("keyword","finally")){var i=U.token;r(),t=new AST_Finally({start:i,body:k(),end:o()})}return e||t||a("Missing catch/finally blocks"),new AST_Try({body:u,bcatch:e,bfinally:t})}function h(u,e){for(var t=[];t.push(new AST_VarDef({start:U.token,name:O(e?AST_SymbolConst:AST_SymbolVar),value:n("operator","=")?(r(),J(!1,u)):null,end:o()})),n("punc",",");)r();return t}function b(){var u,e=U.token;switch(e.type){case"name":case"keyword":u=y(AST_SymbolRef);break;case"num":u=new AST_Number({start:e,end:e,value:e.value});break;case"string":u=new AST_String({start:e,end:e,value:e.value});break;case"regexp":u=new AST_RegExp({start:e,end:e,value:e.value});break;case"atom":switch(e.value){case"false":u=new AST_False({start:e,end:e});break;case"true":u=new AST_True({start:e,end:e});break;case"null":u=new AST_Null({start:e,end:e})}}return r(),u}function T(u,e,t){for(var o=!0,a=[];!n("punc",u)&&(o?o=!1:s(","),!e||!n("punc",u));)a.push(n("punc",",")&&t?new AST_Hole({start:U.token,end:U.token}):J(!1));return r(),a}function R(){var u=U.token;switch(r(),u.type){case"num":case"string":case"name":case"operator":case"keyword":case"atom":return u.value;default:A()}}function g(){var u=U.token;switch(r(),u.type){case"name":case"operator":case"keyword":case"atom":return u.value;default:A()}}function y(u){var e=U.token.value;return new("this"==e?AST_This:u)({name:String(e),start:U.token,end:U.token})}function O(u,e){if(!n("name"))return e||a("Name expected"),null;var t=y(u);return r(),t}function x(u,e,n){return"++"!=e&&"--"!=e||N(n)||a("Invalid use of "+e+" operator"),new u({operator:e,expression:n})}function P(u){return L(z(!0),0,u)}function N(u){return e.strict?u instanceof AST_This?!1:u instanceof AST_PropAccess||u instanceof AST_Symbol:!0}function I(u){++U.in_loop;var e=u();return--U.in_loop,e}e=defaults(e,{strict:!1,filename:null,toplevel:null,expression:!1,html5_comments:!0});var U={input:"string"==typeof u?tokenizer(u,e.filename,e.html5_comments):u,token:null,prev:null,peeked:null,in_function:0,in_directives:!0,in_loop:0,labels:[]};U.token=r();var W=f(function(){var u;switch(B(),U.token.type){case"string":var e=U.in_directives,i=D();return e&&i.body instanceof AST_String&&!n("punc",",")?new AST_Directive({value:i.body.value}):i;case"num":case"regexp":case"operator":case"atom":return D();case"name":return is_token(t(),"punc",":")?F():D();case"punc":switch(U.token.value){case"{":return new AST_BlockStatement({start:U.token,body:k(),end:o()});case"[":case"(":return D();case";":return r(),new AST_EmptyStatement;default:A()}case"keyword":switch(u=U.token.value,r(),u){case"break":return _(AST_Break);case"continue":return _(AST_Continue);case"debugger":return C(),new AST_Debugger;case"do":return new AST_Do({body:I(W),condition:(c("keyword","while"),u=E(),C(),u)});case"while":return new AST_While({condition:E(),body:I(W)});case"for":return d();case"function":return X(AST_Defun);case"if":return v();case"return":return 0==U.in_function&&a("'return' outside of function"),new AST_Return({value:n("punc",";")?(r(),null):l()?null:(u=J(!0),C(),u)});case"switch":return new AST_Switch({expression:E(),body:I(m)});case"throw":return U.token.nlb&&a("Illegal newline after 'throw'"),new AST_Throw({value:(u=J(!0),C(),u)});case"try":return w();case"var":return u=Y(),C(),u;case"const":return u=K(),C(),u;case"with":return new AST_With({expression:E(),body:W()});default:A()}}}),X=function(u){var e=u===AST_Defun,t=n("name")?O(e?AST_SymbolDefun:AST_SymbolLambda):null;return e&&!t&&A(),s("("),new u({name:t,argnames:function(u,e){for(;!n("punc",")");)u?u=!1:s(","),e.push(O(AST_SymbolFunarg));return r(),e}(!0,[]),body:function(u,e){++U.in_function,U.in_directives=!0,U.in_loop=0,U.labels=[];var n=k();return--U.in_function,U.in_loop=u,U.labels=e,n}(U.in_loop,U.labels)})},Y=function(u){return new AST_Var({start:o(),definitions:h(u,!1),end:o()})},K=function(){return new AST_Const({start:o(),definitions:h(!1,!0),end:o()})},M=function(){var u=U.token;c("operator","new");var e,t=H(!1);return n("punc","(")?(r(),e=T(")")):e=[],$(new AST_New({start:u,expression:t,args:e,end:o()}),!0)},H=function(u){if(n("operator","new"))return M();var e=U.token;if(n("punc")){switch(e.value){case"(":r();var t=J(!0);return t.start=e,t.end=U.token,s(")"),$(t,u);case"[":return $(j(),u);case"{":return $(V(),u)}A()}if(n("keyword","function")){r();var a=X(AST_Function);return a.start=e,a.end=o(),$(a,u)}return ATOMIC_START_TOKEN[U.token.type]?$(b(),u):void A()},j=f(function(){return s("["),new AST_Array({elements:T("]",!e.strict,!0)})}),V=f(function(){s("{");for(var u=!0,t=[];!n("punc","}")&&(u?u=!1:s(","),e.strict||!n("punc","}"));){var a=U.token,i=a.type,A=R();if("name"==i&&!n("punc",":")){if("get"==A){t.push(new AST_ObjectGetter({start:a,key:b(),value:X(AST_Accessor),end:o()}));continue}if("set"==A){t.push(new AST_ObjectSetter({start:a,key:b(),value:X(AST_Accessor),end:o()}));continue}}s(":"),t.push(new AST_ObjectKeyVal({start:a,key:A,value:J(!1),end:o()}))}return r(),new AST_Object({properties:t})}),$=function(u,e){var t=u.start;if(n("punc","."))return r(),$(new AST_Dot({start:t,expression:u,property:g(),end:o()}),e);if(n("punc","[")){r();var a=J(!0);return s("]"),$(new AST_Sub({start:t,expression:u,property:a,end:o()}),e)}return e&&n("punc","(")?(r(),$(new AST_Call({start:t,expression:u,args:T(")"),end:o()}),!0)):u},z=function(u){var e=U.token;if(n("operator")&&UNARY_PREFIX(e.value)){r(),B();var t=x(AST_UnaryPrefix,e.value,z(u));return t.start=e,t.end=o(),t}for(var a=H(u);n("operator")&&UNARY_POSTFIX(U.token.value)&&!U.token.nlb;)a=x(AST_UnaryPostfix,U.token.value,a),a.start=e,a.end=U.token,r();return a},L=function(u,e,t){var o=n("operator")?U.token.value:null;"in"==o&&t&&(o=null);var a=null!=o?PRECEDENCE[o]:null;if(null!=a&&a>e){r();var i=L(z(!0),a,t);return L(new AST_Binary({start:u.start,left:u,operator:o,right:i,end:i.end}),e,t)}return u},G=function(u){var e=U.token,t=P(u);if(n("operator","?")){r();var a=J(!1);return s(":"),new AST_Conditional({start:e,condition:t,consequent:a,alternative:J(!1,u),end:o()})}return t},q=function(u){var e=U.token,t=G(u),i=U.token.value;if(n("operator")&&ASSIGNMENT(i)){if(N(t))return r(),new AST_Assign({start:e,left:t,operator:i,right:q(u),end:o()});a("Invalid assignment")}return t},J=function(u,e){var o=U.token,a=q(e);return u&&n("punc",",")?(r(),new AST_Seq({start:o,car:a,cdr:J(!0,e),end:t()})):a};return e.expression?J(!0):function(){for(var u=U.token,t=[];!n("eof");)t.push(W());var r=o(),a=e.toplevel;return a?(a.body=a.body.concat(t),a.end=r):a=new AST_Toplevel({start:u,body:t,end:r}),a}()}var KEYWORDS="break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with",KEYWORDS_ATOM="false null true",RESERVED_WORDS="abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized this throws transient volatile yield "+KEYWORDS_ATOM+" "+KEYWORDS,KEYWORDS_BEFORE_EXPRESSION="return new delete throw else case";KEYWORDS=makePredicate(KEYWORDS),RESERVED_WORDS=makePredicate(RESERVED_WORDS),KEYWORDS_BEFORE_EXPRESSION=makePredicate(KEYWORDS_BEFORE_EXPRESSION),KEYWORDS_ATOM=makePredicate(KEYWORDS_ATOM);var OPERATOR_CHARS=makePredicate(characters("+-*&%=<>!?|~^")),RE_HEX_NUMBER=/^0x[0-9a-f]+$/i,RE_OCT_NUMBER=/^0[0-7]+$/,RE_DEC_NUMBER=/^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i,OPERATORS=makePredicate(["in","instanceof","typeof","new","void","delete","++","--","+","-","!","~","&","|","^","*","/","%",">>","<<",">>>","<",">","<=",">=","==","===","!=","!==","?","=","+=","-=","/=","*=","%=",">>=","<<=",">>>=","|=","^=","&=","&&","||"]),WHITESPACE_CHARS=makePredicate(characters("  \n\r	\f​᠎             　")),PUNC_BEFORE_EXPRESSION=makePredicate(characters("[{(,.;:")),PUNC_CHARS=makePredicate(characters("[]{}(),;:")),REGEXP_MODIFIERS=makePredicate(characters("gmsiy")),UNICODE={letter:new RegExp("[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),non_spacing_mark:new RegExp("[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065E\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0900-\\u0902\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0955\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFD-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]"),space_combining_mark:new RegExp("[\\u0903\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"),connector_punctuation:new RegExp("[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]")};JS_Parse_Error.prototype.toString=function(){return this.message+" (line: "+this.line+", col: "+this.col+", pos: "+this.pos+")\n\n"+this.stack};var EX_EOF={},UNARY_PREFIX=makePredicate(["typeof","void","delete","--","++","!","~","-","+"]),UNARY_POSTFIX=makePredicate(["--","++"]),ASSIGNMENT=makePredicate(["=","+=","-=","/=","*=","%=",">>=","<<=",">>>=","|=","^=","&="]),PRECEDENCE=function(u,e){for(var n=0;n<u.length;++n)for(var t=u[n],r=0;r<t.length;++r)e[t[r]]=n+1;return e}([["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]],{}),STATEMENTS_WITH_LABELS=array_to_hash(["for","do","while","switch"]),ATOMIC_START_TOKEN=array_to_hash(["atom","num","string","regexp","name"]);

"use strict";function TreeTransformer(n,o){TreeWalker.call(this),this.before=n,this.after=o}TreeTransformer.prototype=new TreeWalker,function(n){function o(o,r){o.DEFMETHOD("transform",function(o,t){var e,a;return o.push(this),o.before&&(e=o.before(this,r,t)),e===n&&(o.after?(o.stack[o.stack.length-1]=e=this.clone(),r(e,o),a=o.after(e,t),a!==n&&(e=a)):(e=this,r(e,o))),o.pop(),e})}function r(n,o){return MAP(n,function(n){return n.transform(o,!0)})}o(AST_Node,noop),o(AST_LabeledStatement,function(n,o){n.label=n.label.transform(o),n.body=n.body.transform(o)}),o(AST_SimpleStatement,function(n,o){n.body=n.body.transform(o)}),o(AST_Block,function(n,o){n.body=r(n.body,o)}),o(AST_DWLoop,function(n,o){n.condition=n.condition.transform(o),n.body=n.body.transform(o)}),o(AST_For,function(n,o){n.init&&(n.init=n.init.transform(o)),n.condition&&(n.condition=n.condition.transform(o)),n.step&&(n.step=n.step.transform(o)),n.body=n.body.transform(o)}),o(AST_ForIn,function(n,o){n.init=n.init.transform(o),n.object=n.object.transform(o),n.body=n.body.transform(o)}),o(AST_With,function(n,o){n.expression=n.expression.transform(o),n.body=n.body.transform(o)}),o(AST_Exit,function(n,o){n.value&&(n.value=n.value.transform(o))}),o(AST_LoopControl,function(n,o){n.label&&(n.label=n.label.transform(o))}),o(AST_If,function(n,o){n.condition=n.condition.transform(o),n.body=n.body.transform(o),n.alternative&&(n.alternative=n.alternative.transform(o))}),o(AST_Switch,function(n,o){n.expression=n.expression.transform(o),n.body=r(n.body,o)}),o(AST_Case,function(n,o){n.expression=n.expression.transform(o),n.body=r(n.body,o)}),o(AST_Try,function(n,o){n.body=r(n.body,o),n.bcatch&&(n.bcatch=n.bcatch.transform(o)),n.bfinally&&(n.bfinally=n.bfinally.transform(o))}),o(AST_Catch,function(n,o){n.argname=n.argname.transform(o),n.body=r(n.body,o)}),o(AST_Definitions,function(n,o){n.definitions=r(n.definitions,o)}),o(AST_VarDef,function(n,o){n.name=n.name.transform(o),n.value&&(n.value=n.value.transform(o))}),o(AST_Lambda,function(n,o){n.name&&(n.name=n.name.transform(o)),n.argnames=r(n.argnames,o),n.body=r(n.body,o)}),o(AST_Call,function(n,o){n.expression=n.expression.transform(o),n.args=r(n.args,o)}),o(AST_Seq,function(n,o){n.car=n.car.transform(o),n.cdr=n.cdr.transform(o)}),o(AST_Dot,function(n,o){n.expression=n.expression.transform(o)}),o(AST_Sub,function(n,o){n.expression=n.expression.transform(o),n.property=n.property.transform(o)}),o(AST_Unary,function(n,o){n.expression=n.expression.transform(o)}),o(AST_Binary,function(n,o){n.left=n.left.transform(o),n.right=n.right.transform(o)}),o(AST_Conditional,function(n,o){n.condition=n.condition.transform(o),n.consequent=n.consequent.transform(o),n.alternative=n.alternative.transform(o)}),o(AST_Array,function(n,o){n.elements=r(n.elements,o)}),o(AST_Object,function(n,o){n.properties=r(n.properties,o)}),o(AST_ObjectProperty,function(n,o){n.value=n.value.transform(o)})}();

"use strict";function SymbolDef(e,n,t){this.name=t.name,this.orig=[t],this.scope=e,this.references=[],this.global=!1,this.mangled_name=null,this.undeclared=!1,this.constant=!1,this.index=n}SymbolDef.prototype={unmangleable:function(e){return this.global&&!(e&&e.toplevel)||this.undeclared||!(e&&e.eval)&&(this.scope.uses_eval||this.scope.uses_with)},mangle:function(e){if(!this.mangled_name&&!this.unmangleable(e)){var n=this.scope;!e.screw_ie8&&this.orig[0]instanceof AST_SymbolLambda&&(n=n.parent_scope),this.mangled_name=n.next_mangled(e,this)}}},AST_Toplevel.DEFMETHOD("figure_out_scope",function(e){e=defaults(e,{screw_ie8:!1});var n=this,t=n.parent_scope=null,i=null,a=0,s=new TreeWalker(function(n,o){if(e.screw_ie8&&n instanceof AST_Catch){var r=t;return t=new AST_Scope(n),t.init_scope_vars(a),t.parent_scope=r,o(),t=r,!0}if(n instanceof AST_Scope){n.init_scope_vars(a);var r=n.parent_scope=t,c=i;return i=t=n,++a,o(),--a,t=r,i=c,!0}if(n instanceof AST_Directive)return n.scope=t,push_uniq(t.directives,n.value),!0;if(n instanceof AST_With)for(var l=t;l;l=l.parent_scope)l.uses_with=!0;else if(n instanceof AST_Symbol&&(n.scope=t),n instanceof AST_SymbolLambda)i.def_function(n);else if(n instanceof AST_SymbolDefun)(n.scope=i.parent_scope).def_function(n);else if(n instanceof AST_SymbolVar||n instanceof AST_SymbolConst){var f=i.def_variable(n);f.constant=n instanceof AST_SymbolConst,f.init=s.parent().value}else n instanceof AST_SymbolCatch&&(e.screw_ie8?t:i).def_variable(n)});n.walk(s);var o=null,r=n.globals=new Dictionary,s=new TreeWalker(function(e,t){if(e instanceof AST_Lambda){var i=o;return o=e,t(),o=i,!0}if(e instanceof AST_SymbolRef){var a=e.name,c=e.scope.find_variable(a);if(c)e.thedef=c;else{var l;if(r.has(a)?l=r.get(a):(l=new SymbolDef(n,r.size(),e),l.undeclared=!0,l.global=!0,r.set(a,l)),e.thedef=l,"eval"==a&&s.parent()instanceof AST_Call)for(var f=e.scope;f&&!f.uses_eval;f=f.parent_scope)f.uses_eval=!0;o&&"arguments"==a&&(o.uses_arguments=!0)}return e.reference(),!0}});n.walk(s)}),AST_Scope.DEFMETHOD("init_scope_vars",function(e){this.directives=[],this.variables=new Dictionary,this.functions=new Dictionary,this.uses_with=!1,this.uses_eval=!1,this.parent_scope=null,this.enclosed=[],this.cname=-1,this.nesting=e}),AST_Scope.DEFMETHOD("strict",function(){return this.has_directive("use strict")}),AST_Lambda.DEFMETHOD("init_scope_vars",function(){AST_Scope.prototype.init_scope_vars.apply(this,arguments),this.uses_arguments=!1}),AST_SymbolRef.DEFMETHOD("reference",function(){var e=this.definition();e.references.push(this);for(var n=this.scope;n&&(push_uniq(n.enclosed,e),n!==e.scope);)n=n.parent_scope;this.frame=this.scope.nesting-e.scope.nesting}),AST_Scope.DEFMETHOD("find_variable",function(e){return e instanceof AST_Symbol&&(e=e.name),this.variables.get(e)||this.parent_scope&&this.parent_scope.find_variable(e)}),AST_Scope.DEFMETHOD("has_directive",function(e){return this.parent_scope&&this.parent_scope.has_directive(e)||(this.directives.indexOf(e)>=0?this:null)}),AST_Scope.DEFMETHOD("def_function",function(e){this.functions.set(e.name,this.def_variable(e))}),AST_Scope.DEFMETHOD("def_variable",function(e){var n;return this.variables.has(e.name)?(n=this.variables.get(e.name),n.orig.push(e)):(n=new SymbolDef(this,this.variables.size(),e),this.variables.set(e.name,n),n.global=!this.parent_scope),e.thedef=n}),AST_Scope.DEFMETHOD("next_mangled",function(e){var n=this.enclosed;e:for(;;){var t=base54(++this.cname);if(is_identifier(t)&&!(e.except.indexOf(t)>=0)){for(var i=n.length;--i>=0;){var a=n[i],s=a.mangled_name||a.unmangleable(e)&&a.name;if(t==s)continue e}return t}}}),AST_Function.DEFMETHOD("next_mangled",function(e,n){for(var t=n.orig[0]instanceof AST_SymbolFunarg&&this.name&&this.name.definition();;){var i=AST_Lambda.prototype.next_mangled.call(this,e,n);if(!t||t.mangled_name!=i)return i}}),AST_Scope.DEFMETHOD("references",function(e){return e instanceof AST_Symbol&&(e=e.definition()),this.enclosed.indexOf(e)<0?null:e}),AST_Symbol.DEFMETHOD("unmangleable",function(e){return this.definition().unmangleable(e)}),AST_SymbolAccessor.DEFMETHOD("unmangleable",function(){return!0}),AST_Label.DEFMETHOD("unmangleable",function(){return!1}),AST_Symbol.DEFMETHOD("unreferenced",function(){return 0==this.definition().references.length&&!(this.scope.uses_eval||this.scope.uses_with)}),AST_Symbol.DEFMETHOD("undeclared",function(){return this.definition().undeclared}),AST_LabelRef.DEFMETHOD("undeclared",function(){return!1}),AST_Label.DEFMETHOD("undeclared",function(){return!1}),AST_Symbol.DEFMETHOD("definition",function(){return this.thedef}),AST_Symbol.DEFMETHOD("global",function(){return this.definition().global}),AST_Toplevel.DEFMETHOD("_default_mangler_options",function(e){return defaults(e,{except:[],eval:!1,sort:!1,toplevel:!1,screw_ie8:!1})}),AST_Toplevel.DEFMETHOD("mangle_names",function(e){e=this._default_mangler_options(e);var n=-1,t=[],i=new TreeWalker(function(a,s){if(a instanceof AST_LabeledStatement){var o=n;return s(),n=o,!0}if(a instanceof AST_Scope){var r=(i.parent(),[]);return a.variables.each(function(n){e.except.indexOf(n.name)<0&&r.push(n)}),e.sort&&r.sort(function(e,n){return n.references.length-e.references.length}),void t.push.apply(t,r)}if(a instanceof AST_Label){var c;do c=base54(++n);while(!is_identifier(c));return a.mangled_name=c,!0}return e.screw_ie8&&a instanceof AST_SymbolCatch?void t.push(a.definition()):void 0});this.walk(i),t.forEach(function(n){n.mangle(e)})}),AST_Toplevel.DEFMETHOD("compute_char_frequency",function(e){e=this._default_mangler_options(e);var n=new TreeWalker(function(n){n instanceof AST_Constant?base54.consider(n.print_to_string()):n instanceof AST_Return?base54.consider("return"):n instanceof AST_Throw?base54.consider("throw"):n instanceof AST_Continue?base54.consider("continue"):n instanceof AST_Break?base54.consider("break"):n instanceof AST_Debugger?base54.consider("debugger"):n instanceof AST_Directive?base54.consider(n.value):n instanceof AST_While?base54.consider("while"):n instanceof AST_Do?base54.consider("do while"):n instanceof AST_If?(base54.consider("if"),n.alternative&&base54.consider("else")):n instanceof AST_Var?base54.consider("var"):n instanceof AST_Const?base54.consider("const"):n instanceof AST_Lambda?base54.consider("function"):n instanceof AST_For?base54.consider("for"):n instanceof AST_ForIn?base54.consider("for in"):n instanceof AST_Switch?base54.consider("switch"):n instanceof AST_Case?base54.consider("case"):n instanceof AST_Default?base54.consider("default"):n instanceof AST_With?base54.consider("with"):n instanceof AST_ObjectSetter?base54.consider("set"+n.key):n instanceof AST_ObjectGetter?base54.consider("get"+n.key):n instanceof AST_ObjectKeyVal?base54.consider(n.key):n instanceof AST_New?base54.consider("new"):n instanceof AST_This?base54.consider("this"):n instanceof AST_Try?base54.consider("try"):n instanceof AST_Catch?base54.consider("catch"):n instanceof AST_Finally?base54.consider("finally"):n instanceof AST_Symbol&&n.unmangleable(e)?base54.consider(n.name):n instanceof AST_Unary||n instanceof AST_Binary?base54.consider(n.operator):n instanceof AST_Dot&&base54.consider(n.property)});this.walk(n),base54.sort()});var base54=function(){function e(){i=Object.create(null),t=a.split("").map(function(e){return e.charCodeAt(0)}),t.forEach(function(e){i[e]=0})}function n(e){var n="",i=54;do n+=String.fromCharCode(t[e%i]),e=Math.floor(e/i),i=64;while(e>0);return n}var t,i,a="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789";return n.consider=function(e){for(var n=e.length;--n>=0;){var t=e.charCodeAt(n);t in i&&++i[t]}},n.sort=function(){t=mergeSort(t,function(e,n){return is_digit(e)&&!is_digit(n)?1:is_digit(n)&&!is_digit(e)?-1:i[n]-i[e]})},n.reset=e,e(),n.get=function(){return t},n.freq=function(){return i},n}();AST_Toplevel.DEFMETHOD("scope_warnings",function(e){e=defaults(e,{undeclared:!1,unreferenced:!0,assign_to_global:!0,func_arguments:!0,nested_defuns:!0,eval:!0});var n=new TreeWalker(function(t){if(e.undeclared&&t instanceof AST_SymbolRef&&t.undeclared()&&AST_Node.warn("Undeclared symbol: {name} [{file}:{line},{col}]",{name:t.name,file:t.start.file,line:t.start.line,col:t.start.col}),e.assign_to_global){var i=null;t instanceof AST_Assign&&t.left instanceof AST_SymbolRef?i=t.left:t instanceof AST_ForIn&&t.init instanceof AST_SymbolRef&&(i=t.init),i&&(i.undeclared()||i.global()&&i.scope!==i.definition().scope)&&AST_Node.warn("{msg}: {name} [{file}:{line},{col}]",{msg:i.undeclared()?"Accidental global?":"Assignment to global",name:i.name,file:i.start.file,line:i.start.line,col:i.start.col})}e.eval&&t instanceof AST_SymbolRef&&t.undeclared()&&"eval"==t.name&&AST_Node.warn("Eval is used [{file}:{line},{col}]",t.start),e.unreferenced&&(t instanceof AST_SymbolDeclaration||t instanceof AST_Label)&&t.unreferenced()&&AST_Node.warn("{type} {name} is declared but not referenced [{file}:{line},{col}]",{type:t instanceof AST_Label?"Label":"Symbol",name:t.name,file:t.start.file,line:t.start.line,col:t.start.col}),e.func_arguments&&t instanceof AST_Lambda&&t.uses_arguments&&AST_Node.warn("arguments used in function {name} [{file}:{line},{col}]",{name:t.name?t.name.name:"anonymous",file:t.start.file,line:t.start.line,col:t.start.col}),e.nested_defuns&&t instanceof AST_Defun&&!(n.parent()instanceof AST_Scope)&&AST_Node.warn('Function {name} declared in nested statement "{type}" [{file}:{line},{col}]',{name:t.name.name,type:n.parent().TYPE,file:t.start.file,line:t.start.line,col:t.start.col})});this.walk(n)});

"use strict";function OutputStream(n){function t(n,t){return n.replace(/[\u0080-\uffff]/g,function(n){var e=n.charCodeAt(0).toString(16);if(e.length<=2&&!t){for(;e.length<2;)e="0"+e;return"\\x"+e}for(;e.length<4;)e="0"+e;return"\\u"+e})}function e(e){var i=0,r=0;return e=e.replace(/[\\\b\f\n\r\t\x22\x27\u2028\u2029\0]/g,function(n){switch(n){case"\\":return"\\\\";case"\b":return"\\b";case"\f":return"\\f";case"\n":return"\\n";case"\r":return"\\r";case"\u2028":return"\\u2028";case"\u2029":return"\\u2029";case'"':return++i,'"';case"'":return++r,"'";case"\x00":return"\\x00"}return n}),n.ascii_only&&(e=t(e)),i>r?"'"+e.replace(/\x27/g,"\\'")+"'":'"'+e.replace(/\x22/g,'\\"')+'"'}function i(t){var i=e(t);return n.inline_script&&(i=i.replace(/<\x2fscript([>\/\t\n\f\r ])/gi,"<\\/script$1")),i}function r(e){return e=e.toString(),n.ascii_only&&(e=t(e,!0)),e}function o(t){return repeat_string(" ",n.indent_start+d-t*n.indent_level)}function c(){return w.charAt(w.length-1)}function a(){n.max_line_len&&h>n.max_line_len&&s("\n")}function s(t){t=String(t);var e=t.charAt(0);if(v&&(e&&!(";}".indexOf(e)<0)||/[;]$/.test(w)||(n.semicolons||x(e)?(b+=";",h++,y++):(b+="\n",y++,m++,h=0),n.beautify||(g=!1)),v=!1,a()),!n.beautify&&n.preserve_line&&N[N.length-1])for(var i=N[N.length-1].start.line;i>m;)b+="\n",y++,m++,h=0,g=!1;if(g){var r=c();(is_identifier_char(r)&&(is_identifier_char(e)||"\\"==e)||/^[\+\-\/]$/.test(e)&&e==r)&&(b+=" ",h++,y++),g=!1}var o=t.split(/\r?\n/),s=o.length-1;m+=s,0==s?h+=o[s].length:h=o[s].length,y+=t.length,w=t,b+=t}function p(){v=!1,s(";")}function f(){return d+n.indent_level}function u(n){var t;return s("{"),C(),k(f(),function(){t=n()}),D(),s("}"),t}function _(n){s("(");var t=n();return s(")"),t}function l(n){s("[");var t=n();return s("]"),t}function S(){s(","),E()}function T(){s(":"),n.space_colon&&E()}function A(){return b}n=defaults(n,{indent_start:0,indent_level:4,quote_keys:!1,space_colon:!0,ascii_only:!1,unescape_regexps:!1,inline_script:!1,width:80,max_line_len:32e3,beautify:!1,source_map:null,bracketize:!1,semicolons:!0,comments:!1,preserve_line:!1,screw_ie8:!1,preamble:null},!0);var d=0,h=0,m=1,y=0,b="",g=!1,v=!1,w=null,x=makePredicate("( [ + * / - , ."),E=n.beautify?function(){s(" ")}:function(){g=!0},D=n.beautify?function(t){n.beautify&&s(o(t?.5:0))}:noop,k=n.beautify?function(n,t){n===!0&&(n=f());var e=d;d=n;var i=t();return d=e,i}:function(n,t){return t()},C=n.beautify?function(){s("\n")}:noop,F=n.beautify?function(){s(";")}:function(){v=!0},O=n.source_map?function(t,e){try{t&&n.source_map.add(t.file||"?",m,h,t.line,t.col,e||"name"!=t.type?e:t.value)}catch(i){AST_Node.warn("Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]",{file:t.file,line:t.line,col:t.col,cline:m,ccol:h,name:e||""})}}:noop;n.preamble&&s(n.preamble.replace(/\r\n?|[\n\u2028\u2029]|\s*$/g,"\n"));var N=[];return{get:A,toString:A,indent:D,indentation:function(){return d},current_width:function(){return h-d},should_break:function(){return n.width&&this.current_width()>=n.width},newline:C,print:s,space:E,comma:S,colon:T,last:function(){return w},semicolon:F,force_semicolon:p,to_ascii:t,print_name:function(n){s(r(n))},print_string:function(n){s(i(n))},next_indent:f,with_indent:k,with_block:u,with_parens:_,with_square:l,add_mapping:O,option:function(t){return n[t]},line:function(){return m},col:function(){return h},pos:function(){return y},push_node:function(n){N.push(n)},pop_node:function(){return N.pop()},stack:function(){return N},parent:function(n){return N[N.length-2-(n||0)]}}}!function(){function n(n,t){n.DEFMETHOD("_codegen",t)}function t(n,t){n.DEFMETHOD("needs_parens",t)}function e(n){var t=n.parent();return t instanceof AST_Unary?!0:t instanceof AST_Binary&&!(t instanceof AST_Assign)?!0:t instanceof AST_Call&&t.expression===this?!0:t instanceof AST_Conditional&&t.condition===this?!0:t instanceof AST_PropAccess&&t.expression===this?!0:void 0}function i(n,t,e){var i=n.length-1;n.forEach(function(n,r){n instanceof AST_EmptyStatement||(e.indent(),n.print(e),r==i&&t||(e.newline(),t&&e.newline()))})}function r(n,t){n.length>0?t.with_block(function(){i(n,!1,t)}):t.print("{}")}function o(n,t){if(t.option("bracketize"))return void l(n.body,t);if(!n.body)return t.force_semicolon();if(n.body instanceof AST_Do&&!t.option("screw_ie8"))return void l(n.body,t);for(var e=n.body;;)if(e instanceof AST_If){if(!e.alternative)return void l(n.body,t);e=e.alternative}else{if(!(e instanceof AST_StatementWithBody))break;e=e.body}s(n.body,t)}function c(n,t,e){if(e)try{n.walk(new TreeWalker(function(n){if(n instanceof AST_Binary&&"in"==n.operator)throw t})),n.print(t)}catch(i){if(i!==t)throw i;n.print(t,!0)}else n.print(t)}function a(n){return[92,47,46,43,42,63,40,41,91,93,123,125,36,94,58,124,33,10,13,0,65279,8232,8233].indexOf(n)<0}function s(n,t){t.option("bracketize")?!n||n instanceof AST_EmptyStatement?t.print("{}"):n instanceof AST_BlockStatement?n.print(t):t.with_block(function(){t.indent(),n.print(t),t.newline()}):!n||n instanceof AST_EmptyStatement?t.force_semicolon():n.print(t)}function p(n){for(var t=n.stack(),e=t.length,i=t[--e],r=t[--e];e>0;){if(r instanceof AST_Statement&&r.body===i)return!0;if(!(r instanceof AST_Seq&&r.car===i||r instanceof AST_Call&&r.expression===i&&!(r instanceof AST_New)||r instanceof AST_Dot&&r.expression===i||r instanceof AST_Sub&&r.expression===i||r instanceof AST_Conditional&&r.condition===i||r instanceof AST_Binary&&r.left===i||r instanceof AST_UnaryPostfix&&r.expression===i))return!1;i=r,r=t[--e]}}function f(n,t){return 0==n.args.length&&!t.option("beautify")}function u(n){for(var t=n[0],e=t.length,i=1;i<n.length;++i)n[i].length<e&&(t=n[i],e=t.length);return t}function _(n){var t,e=n.toString(10),i=[e.replace(/^0\./,".").replace("e+","e")];return Math.floor(n)===n?(n>=0?i.push("0x"+n.toString(16).toLowerCase(),"0"+n.toString(8)):i.push("-0x"+(-n).toString(16).toLowerCase(),"-0"+(-n).toString(8)),(t=/^(.*?)(0+)$/.exec(n))&&i.push(t[1]+"e"+t[2].length)):(t=/^0?\.(0+)(.*)$/.exec(n))&&i.push(t[2]+"e-"+(t[1].length+t[2].length),e.substr(e.indexOf("."))),u(i)}function l(n,t){return n instanceof AST_BlockStatement?void n.print(t):void t.with_block(function(){t.indent(),n.print(t),t.newline()})}function S(n,t){n.DEFMETHOD("add_source_map",function(n){t(this,n)})}function T(n,t){t.add_mapping(n.start)}AST_Node.DEFMETHOD("print",function(n,t){function e(){i.add_comments(n),i.add_source_map(n),r(i,n)}var i=this,r=i._codegen;n.push_node(i),t||i.needs_parens(n)?n.with_parens(e):e(),n.pop_node()}),AST_Node.DEFMETHOD("print_to_string",function(n){var t=OutputStream(n);return this.print(t),t.get()}),AST_Node.DEFMETHOD("add_comments",function(n){var t=n.option("comments"),e=this;if(t){var i=e.start;if(i&&!i._comments_dumped){i._comments_dumped=!0;var r=i.comments_before||[];e instanceof AST_Exit&&e.value&&e.value.walk(new TreeWalker(function(n){return n.start&&n.start.comments_before&&(r=r.concat(n.start.comments_before),n.start.comments_before=[]),n instanceof AST_Function||n instanceof AST_Array||n instanceof AST_Object?!0:void 0})),t.test?r=r.filter(function(n){return t.test(n.value)}):"function"==typeof t&&(r=r.filter(function(n){return t(e,n)})),r.forEach(function(t){/comment[134]/.test(t.type)?(n.print("//"+t.value+"\n"),n.indent()):"comment2"==t.type&&(n.print("/*"+t.value+"*/"),i.nlb?(n.print("\n"),n.indent()):n.space())})}}}),t(AST_Node,function(){return!1}),t(AST_Function,function(n){return p(n)}),t(AST_Object,function(n){return p(n)}),t(AST_Unary,function(n){var t=n.parent();return t instanceof AST_PropAccess&&t.expression===this}),t(AST_Seq,function(n){var t=n.parent();return t instanceof AST_Call||t instanceof AST_Unary||t instanceof AST_Binary||t instanceof AST_VarDef||t instanceof AST_PropAccess||t instanceof AST_Array||t instanceof AST_ObjectProperty||t instanceof AST_Conditional}),t(AST_Binary,function(n){var t=n.parent();if(t instanceof AST_Call&&t.expression===this)return!0;if(t instanceof AST_Unary)return!0;if(t instanceof AST_PropAccess&&t.expression===this)return!0;if(t instanceof AST_Binary){var e=t.operator,i=PRECEDENCE[e],r=this.operator,o=PRECEDENCE[r];if(i>o||i==o&&this===t.right)return!0}}),t(AST_PropAccess,function(n){var t=n.parent();if(t instanceof AST_New&&t.expression===this)try{this.walk(new TreeWalker(function(n){if(n instanceof AST_Call)throw t}))}catch(e){if(e!==t)throw e;return!0}}),t(AST_Call,function(n){var t,e=n.parent();return e instanceof AST_New&&e.expression===this?!0:this.expression instanceof AST_Function&&e instanceof AST_PropAccess&&e.expression===this&&(t=n.parent(1))instanceof AST_Assign&&t.left===e}),t(AST_New,function(n){var t=n.parent();return f(this,n)&&(t instanceof AST_PropAccess||t instanceof AST_Call&&t.expression===this)?!0:void 0}),t(AST_Number,function(n){var t=n.parent();return this.getValue()<0&&t instanceof AST_PropAccess&&t.expression===this?!0:void 0}),t(AST_NaN,function(n){var t=n.parent();return t instanceof AST_PropAccess&&t.expression===this?!0:void 0}),t(AST_Assign,e),t(AST_Conditional,e),n(AST_Directive,function(n,t){t.print_string(n.value),t.semicolon()}),n(AST_Debugger,function(n,t){t.print("debugger"),t.semicolon()}),AST_StatementWithBody.DEFMETHOD("_do_print_body",function(n){s(this.body,n)}),n(AST_Statement,function(n,t){n.body.print(t),t.semicolon()}),n(AST_Toplevel,function(n,t){i(n.body,!0,t),t.print("")}),n(AST_LabeledStatement,function(n,t){n.label.print(t),t.colon(),n.body.print(t)}),n(AST_SimpleStatement,function(n,t){n.body.print(t),t.semicolon()}),n(AST_BlockStatement,function(n,t){r(n.body,t)}),n(AST_EmptyStatement,function(n,t){t.semicolon()}),n(AST_Do,function(n,t){t.print("do"),t.space(),n._do_print_body(t),t.space(),t.print("while"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.semicolon()}),n(AST_While,function(n,t){t.print("while"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.space(),n._do_print_body(t)}),n(AST_For,function(n,t){t.print("for"),t.space(),t.with_parens(function(){!n.init||n.init instanceof AST_EmptyStatement?t.print(";"):(n.init instanceof AST_Definitions?n.init.print(t):c(n.init,t,!0),t.print(";"),t.space()),n.condition?(n.condition.print(t),t.print(";"),t.space()):t.print(";"),n.step&&n.step.print(t)}),t.space(),n._do_print_body(t)}),n(AST_ForIn,function(n,t){t.print("for"),t.space(),t.with_parens(function(){n.init.print(t),t.space(),t.print("in"),t.space(),n.object.print(t)}),t.space(),n._do_print_body(t)}),n(AST_With,function(n,t){t.print("with"),t.space(),t.with_parens(function(){n.expression.print(t)}),t.space(),n._do_print_body(t)}),AST_Lambda.DEFMETHOD("_do_print",function(n,t){var e=this;t||n.print("function"),e.name&&(n.space(),e.name.print(n)),n.with_parens(function(){e.argnames.forEach(function(t,e){e&&n.comma(),t.print(n)})}),n.space(),r(e.body,n)}),n(AST_Lambda,function(n,t){n._do_print(t)}),AST_Exit.DEFMETHOD("_do_print",function(n,t){n.print(t),this.value&&(n.space(),this.value.print(n)),n.semicolon()}),n(AST_Return,function(n,t){n._do_print(t,"return")}),n(AST_Throw,function(n,t){n._do_print(t,"throw")}),AST_LoopControl.DEFMETHOD("_do_print",function(n,t){n.print(t),this.label&&(n.space(),this.label.print(n)),n.semicolon()}),n(AST_Break,function(n,t){n._do_print(t,"break")}),n(AST_Continue,function(n,t){n._do_print(t,"continue")}),n(AST_If,function(n,t){t.print("if"),t.space(),t.with_parens(function(){n.condition.print(t)}),t.space(),n.alternative?(o(n,t),t.space(),t.print("else"),t.space(),s(n.alternative,t)):n._do_print_body(t)}),n(AST_Switch,function(n,t){t.print("switch"),t.space(),t.with_parens(function(){n.expression.print(t)}),t.space(),n.body.length>0?t.with_block(function(){n.body.forEach(function(n,e){e&&t.newline(),t.indent(!0),n.print(t)})}):t.print("{}")}),AST_SwitchBranch.DEFMETHOD("_do_print_body",function(n){this.body.length>0&&(n.newline(),this.body.forEach(function(t){n.indent(),t.print(n),n.newline()}))}),n(AST_Default,function(n,t){t.print("default:"),n._do_print_body(t)}),n(AST_Case,function(n,t){t.print("case"),t.space(),n.expression.print(t),t.print(":"),n._do_print_body(t)}),n(AST_Try,function(n,t){t.print("try"),t.space(),r(n.body,t),n.bcatch&&(t.space(),n.bcatch.print(t)),n.bfinally&&(t.space(),n.bfinally.print(t))}),n(AST_Catch,function(n,t){t.print("catch"),t.space(),t.with_parens(function(){n.argname.print(t)}),t.space(),r(n.body,t)}),n(AST_Finally,function(n,t){t.print("finally"),t.space(),r(n.body,t)}),AST_Definitions.DEFMETHOD("_do_print",function(n,t){n.print(t),n.space(),this.definitions.forEach(function(t,e){e&&n.comma(),t.print(n)});var e=n.parent(),i=e instanceof AST_For||e instanceof AST_ForIn,r=i&&e.init===this;r||n.semicolon()}),n(AST_Var,function(n,t){n._do_print(t,"var")}),n(AST_Const,function(n,t){n._do_print(t,"const")}),n(AST_VarDef,function(n,t){if(n.name.print(t),n.value){t.space(),t.print("="),t.space();var e=t.parent(1),i=e instanceof AST_For||e instanceof AST_ForIn;c(n.value,t,i)}}),n(AST_Call,function(n,t){n.expression.print(t),n instanceof AST_New&&f(n,t)||t.with_parens(function(){n.args.forEach(function(n,e){e&&t.comma(),n.print(t)})})}),n(AST_New,function(n,t){t.print("new"),t.space(),AST_Call.prototype._codegen(n,t)}),AST_Seq.DEFMETHOD("_do_print",function(n){this.car.print(n),this.cdr&&(n.comma(),n.should_break()&&(n.newline(),n.indent()),this.cdr.print(n))}),n(AST_Seq,function(n,t){n._do_print(t)}),n(AST_Dot,function(n,t){var e=n.expression;e.print(t),e instanceof AST_Number&&e.getValue()>=0&&(/[xa-f.]/i.test(t.last())||t.print(".")),t.print("."),t.add_mapping(n.end),t.print_name(n.property)}),n(AST_Sub,function(n,t){n.expression.print(t),t.print("["),n.property.print(t),t.print("]")}),n(AST_UnaryPrefix,function(n,t){var e=n.operator;t.print(e),(/^[a-z]/i.test(e)||/[+-]$/.test(e)&&n.expression instanceof AST_UnaryPrefix&&/^[+-]/.test(n.expression.operator))&&t.space(),n.expression.print(t)}),n(AST_UnaryPostfix,function(n,t){n.expression.print(t),t.print(n.operator)}),n(AST_Binary,function(n,t){n.left.print(t),t.space(),t.print(n.operator),"<"==n.operator&&n.right instanceof AST_UnaryPrefix&&"!"==n.right.operator&&n.right.expression instanceof AST_UnaryPrefix&&"--"==n.right.expression.operator?t.print(" "):t.space(),n.right.print(t)}),n(AST_Conditional,function(n,t){n.condition.print(t),t.space(),t.print("?"),t.space(),n.consequent.print(t),t.space(),t.colon(),n.alternative.print(t)}),n(AST_Array,function(n,t){t.with_square(function(){var e=n.elements,i=e.length;i>0&&t.space(),e.forEach(function(n,e){e&&t.comma(),n.print(t),e===i-1&&n instanceof AST_Hole&&t.comma()}),i>0&&t.space()})}),n(AST_Object,function(n,t){n.properties.length>0?t.with_block(function(){n.properties.forEach(function(n,e){e&&(t.print(","),t.newline()),t.indent(),n.print(t)}),t.newline()}):t.print("{}")}),n(AST_ObjectKeyVal,function(n,t){var e=n.key;t.option("quote_keys")?t.print_string(e+""):("number"==typeof e||!t.option("beautify")&&+e+""==e)&&parseFloat(e)>=0?t.print(_(e)):(RESERVED_WORDS(e)?t.option("screw_ie8"):is_identifier_string(e))?t.print_name(e):t.print_string(e),t.colon(),n.value.print(t)}),n(AST_ObjectSetter,function(n,t){t.print("set"),t.space(),n.key.print(t),n.value._do_print(t,!0)}),n(AST_ObjectGetter,function(n,t){t.print("get"),t.space(),n.key.print(t),n.value._do_print(t,!0)}),n(AST_Symbol,function(n,t){var e=n.definition();t.print_name(e?e.mangled_name||e.name:n.name)}),n(AST_Undefined,function(n,t){t.print("void 0")}),n(AST_Hole,noop),n(AST_Infinity,function(n,t){t.print("1/0")}),n(AST_NaN,function(n,t){t.print("0/0")}),n(AST_This,function(n,t){t.print("this")}),n(AST_Constant,function(n,t){t.print(n.getValue())}),n(AST_String,function(n,t){t.print_string(n.getValue())}),n(AST_Number,function(n,t){t.print(_(n.getValue()))}),n(AST_RegExp,function(n,t){var e=n.getValue().toString();t.option("ascii_only")?e=t.to_ascii(e):t.option("unescape_regexps")&&(e=e.split("\\\\").map(function(n){return n.replace(/\\u[0-9a-fA-F]{4}|\\x[0-9a-fA-F]{2}/g,function(n){var t=parseInt(n.substr(2),16);return a(t)?String.fromCharCode(t):n})}).join("\\\\")),t.print(e);var i=t.parent();i instanceof AST_Binary&&/^in/.test(i.operator)&&i.left===n&&t.print(" ")}),S(AST_Node,noop),S(AST_Directive,T),S(AST_Debugger,T),S(AST_Symbol,T),S(AST_Jump,T),S(AST_StatementWithBody,T),S(AST_LabeledStatement,noop),S(AST_Lambda,T),S(AST_Switch,T),S(AST_SwitchBranch,T),S(AST_BlockStatement,T),S(AST_Toplevel,noop),S(AST_New,T),S(AST_Try,T),S(AST_Catch,T),S(AST_Finally,T),S(AST_Definitions,T),S(AST_Constant,T),S(AST_ObjectProperty,function(n,t){t.add_mapping(n.start,n.key)})}();

"use strict";function Compressor(e,t){return this instanceof Compressor?(TreeTransformer.call(this,this.before,this.after),void(this.options=defaults(e,{sequences:!t,properties:!t,dead_code:!t,drop_debugger:!t,unsafe:!1,unsafe_comps:!1,conditionals:!t,comparisons:!t,evaluate:!t,booleans:!t,loops:!t,unused:!t,hoist_funs:!t,keep_fargs:!1,hoist_vars:!1,if_return:!t,join_vars:!t,cascade:!t,side_effects:!t,pure_getters:!1,pure_funcs:null,negate_iife:!t,screw_ie8:!1,drop_console:!1,angular:!1,warnings:!0,global_defs:{}},!0))):new Compressor(e,t)}Compressor.prototype=new TreeTransformer,merge(Compressor.prototype,{option:function(e){return this.options[e]},warn:function(){this.options.warnings&&AST_Node.warn.apply(AST_Node,arguments)},before:function(e,t){if(e._squeezed)return e;var n=!1;return e instanceof AST_Scope&&(e=e.hoist_declarations(this),n=!0),t(e,this),e=e.optimize(this),n&&e instanceof AST_Scope&&(e.drop_unused(this),t(e,this)),e._squeezed=!0,e}}),function(){function e(e,t){e.DEFMETHOD("optimize",function(e){var n=this;if(n._optimized)return n;var r=t(n,e);return r._optimized=!0,r===n?r:r.transform(e)})}function t(e,t,n){return n||(n={}),t&&(n.start||(n.start=t.start),n.end||(n.end=t.end)),new e(n)}function n(e,n,r){if(n instanceof AST_Node)return n.transform(e);switch(typeof n){case"string":return t(AST_String,r,{value:n}).optimize(e);case"number":return t(isNaN(n)?AST_NaN:AST_Number,r,{value:n}).optimize(e);case"boolean":return t(n?AST_True:AST_False,r).optimize(e);case"undefined":return t(AST_Undefined,r).optimize(e);default:if(null===n)return t(AST_Null,r).optimize(e);if(n instanceof RegExp)return t(AST_RegExp,r).optimize(e);throw new Error(string_template("Can't handle constant of type: {type}",{type:typeof n}))}}function r(e){if(null===e)return[];if(e instanceof AST_BlockStatement)return e.body;if(e instanceof AST_EmptyStatement)return[];if(e instanceof AST_Statement)return[e];throw new Error("Can't convert thing to statement array")}function i(e){return null===e?!0:e instanceof AST_EmptyStatement?!0:e instanceof AST_BlockStatement?0==e.body.length:!1}function o(e){return e instanceof AST_Switch?e:(e instanceof AST_For||e instanceof AST_ForIn||e instanceof AST_DWLoop)&&e.body instanceof AST_BlockStatement?e.body:e}function a(e,n){function i(e){function r(e,n){return t(AST_SimpleStatement,e,{body:t(AST_Assign,e,{operator:"=",left:t(AST_Dot,n,{expression:t(AST_SymbolRef,n,n),property:"$inject"}),right:t(AST_Array,e,{elements:e.argnames.map(function(e){return t(AST_String,e,{value:e.name})})})})})}return e.reduce(function(e,t){e.push(t);var i=t.start,o=i.comments_before;if(o&&o.length>0){var a=o.pop();/@ngInject/.test(a.value)&&(t instanceof AST_Defun?e.push(r(t,t.name)):t instanceof AST_Definitions?t.definitions.forEach(function(t){t.value&&t.value instanceof AST_Lambda&&e.push(r(t.value,t.name))}):n.warn("Unknown statement marked with @ngInject [{file}:{line},{col}]",i))}return e},[])}function a(e){var t=[];return e.reduce(function(e,n){return n instanceof AST_BlockStatement?(d=!0,e.push.apply(e,a(n.body))):n instanceof AST_EmptyStatement?d=!0:n instanceof AST_Directive?t.indexOf(n.value)<0?(e.push(n),t.push(n.value)):d=!0:e.push(n),e},[])}function f(e,n){var i=n.self(),a=i instanceof AST_Lambda,s=[];e:for(var f=e.length;--f>=0;){var l=e[f];switch(!0){case a&&l instanceof AST_Return&&!l.value&&0==s.length:d=!0;continue e;case l instanceof AST_If:if(l.body instanceof AST_Return){if((a&&0==s.length||s[0]instanceof AST_Return&&!s[0].value)&&!l.body.value&&!l.alternative){d=!0;var u=t(AST_SimpleStatement,l.condition,{body:l.condition});s.unshift(u);continue e}if(s[0]instanceof AST_Return&&l.body.value&&s[0].value&&!l.alternative){d=!0,l=l.clone(),l.alternative=s[0],s[0]=l.transform(n);continue e}if((0==s.length||s[0]instanceof AST_Return)&&l.body.value&&!l.alternative&&a){d=!0,l=l.clone(),l.alternative=s[0]||t(AST_Return,l,{value:t(AST_Undefined,l)}),s[0]=l.transform(n);continue e}if(!l.body.value&&a){d=!0,l=l.clone(),l.condition=l.condition.negate(n),l.body=t(AST_BlockStatement,l,{body:r(l.alternative).concat(s)}),l.alternative=null,s=[l.transform(n)];continue e}if(1==s.length&&a&&s[0]instanceof AST_SimpleStatement&&(!l.alternative||l.alternative instanceof AST_SimpleStatement)){d=!0,s.push(t(AST_Return,s[0],{value:t(AST_Undefined,s[0])}).transform(n)),s=r(l.alternative).concat(s),s.unshift(l);continue e}}var _=c(l.body),S=_ instanceof AST_LoopControl?n.loopcontrol_target(_.label):null;if(_&&(_ instanceof AST_Return&&!_.value&&a||_ instanceof AST_Continue&&i===o(S)||_ instanceof AST_Break&&S instanceof AST_BlockStatement&&i===S)){_.label&&remove(_.label.thedef.references,_),d=!0;var p=r(l.body).slice(0,-1);l=l.clone(),l.condition=l.condition.negate(n),l.body=t(AST_BlockStatement,l,{body:r(l.alternative).concat(s)}),l.alternative=t(AST_BlockStatement,l,{body:p}),s=[l.transform(n)];continue e}var _=c(l.alternative),S=_ instanceof AST_LoopControl?n.loopcontrol_target(_.label):null;if(_&&(_ instanceof AST_Return&&!_.value&&a||_ instanceof AST_Continue&&i===o(S)||_ instanceof AST_Break&&S instanceof AST_BlockStatement&&i===S)){_.label&&remove(_.label.thedef.references,_),d=!0,l=l.clone(),l.body=t(AST_BlockStatement,l.body,{body:r(l.body).concat(s)}),l.alternative=t(AST_BlockStatement,l.alternative,{body:r(l.alternative).slice(0,-1)}),s=[l.transform(n)];continue e}s.unshift(l);break;default:s.unshift(l)}}return s}function l(e,t){var n=!1,r=e.length,i=t.self();return e=e.reduce(function(e,r){if(n)s(t,r,e);else{if(r instanceof AST_LoopControl){var a=t.loopcontrol_target(r.label);r instanceof AST_Break&&a instanceof AST_BlockStatement&&o(a)===i||r instanceof AST_Continue&&o(a)===i?r.label&&remove(r.label.thedef.references,r):e.push(r)}else e.push(r);c(r)&&(n=!0)}return e},[]),d=e.length!=r,e}function u(e,n){function r(){i=AST_Seq.from_array(i),i&&o.push(t(AST_SimpleStatement,i,{body:i})),i=[]}if(e.length<2)return e;var i=[],o=[];return e.forEach(function(e){e instanceof AST_SimpleStatement?i.push(e.body):(r(),o.push(e))}),r(),o=_(o,n),d=o.length!=e.length,o}function _(e,n){function r(e){i.pop();var t=o.body;return t instanceof AST_Seq?t.add(e):t=AST_Seq.cons(t,e),t.transform(n)}var i=[],o=null;return e.forEach(function(e){if(o)if(e instanceof AST_For){var n={};try{o.body.walk(new TreeWalker(function(e){if(e instanceof AST_Binary&&"in"==e.operator)throw n})),!e.init||e.init instanceof AST_Definitions?e.init||(e.init=o.body,i.pop()):e.init=r(e.init)}catch(a){if(a!==n)throw a}}else e instanceof AST_If?e.condition=r(e.condition):e instanceof AST_With?e.expression=r(e.expression):e instanceof AST_Exit&&e.value?e.value=r(e.value):e instanceof AST_Exit?e.value=r(t(AST_Undefined,e)):e instanceof AST_Switch&&(e.expression=r(e.expression));i.push(e),o=e instanceof AST_SimpleStatement?e:null}),i}function S(e){var t=null;return e.reduce(function(e,n){return n instanceof AST_Definitions&&t&&t.TYPE==n.TYPE?(t.definitions=t.definitions.concat(n.definitions),d=!0):n instanceof AST_For&&t instanceof AST_Definitions&&(!n.init||n.init.TYPE==t.TYPE)?(d=!0,e.pop(),n.init?n.init.definitions=t.definitions.concat(n.init.definitions):n.init=t,e.push(n),t=n):(t=n,e.push(n)),e},[])}function p(e){e.forEach(function(e){e instanceof AST_SimpleStatement&&(e.body=function n(e){return e.transform(new TreeTransformer(function(e){if(e instanceof AST_Call&&e.expression instanceof AST_Function)return t(AST_UnaryPrefix,e,{operator:"!",expression:e});if(e instanceof AST_Call)e.expression=n(e.expression);else if(e instanceof AST_Seq)e.car=n(e.car);else if(e instanceof AST_Conditional){var r=n(e.condition);if(r!==e.condition){e.condition=r;var i=e.consequent;e.consequent=e.alternative,e.alternative=i}}return e}))}(e.body))})}var d;do d=!1,n.option("angular")&&(e=i(e)),e=a(e),n.option("dead_code")&&(e=l(e,n)),n.option("if_return")&&(e=f(e,n)),n.option("sequences")&&(e=u(e,n)),n.option("join_vars")&&(e=S(e,n));while(d);return n.option("negate_iife")&&p(e,n),e}function s(e,t,n){e.warn("Dropping unreachable code [{file}:{line},{col}]",t.start),t.walk(new TreeWalker(function(t){return t instanceof AST_Definitions?(e.warn("Declarations in unreachable code! [{file}:{line},{col}]",t.start),t.remove_initializers(),n.push(t),!0):t instanceof AST_Defun?(n.push(t),!0):t instanceof AST_Scope?!0:void 0}))}function f(e,t){return e.print_to_string().length>t.print_to_string().length?t:e}function c(e){return e&&e.aborts()}function l(e,n){function i(i){i=r(i),e.body instanceof AST_BlockStatement?(e.body=e.body.clone(),e.body.body=i.concat(e.body.body.slice(1)),e.body=e.body.transform(n)):e.body=t(AST_BlockStatement,e.body,{body:i}).transform(n),l(e,n)}var o=e.body instanceof AST_BlockStatement?e.body.body[0]:e.body;o instanceof AST_If&&(o.body instanceof AST_Break&&n.loopcontrol_target(o.body.label)===e?(e.condition=e.condition?t(AST_Binary,e.condition,{left:e.condition,operator:"&&",right:o.condition.negate(n)}):o.condition.negate(n),i(o.alternative)):o.alternative instanceof AST_Break&&n.loopcontrol_target(o.alternative.label)===e&&(e.condition=e.condition?t(AST_Binary,e.condition,{left:e.condition,operator:"&&",right:o.condition}):o.condition,i(o.body)))}function u(e,t){var n=t.option("pure_getters");t.options.pure_getters=!1;var r=e.has_side_effects(t);return t.options.pure_getters=n,r}function _(e,n){return n.option("booleans")&&n.in_boolean_context()?t(AST_True,e):e}e(AST_Node,function(e){return e}),AST_Node.DEFMETHOD("equivalent_to",function(e){return this.print_to_string()==e.print_to_string()}),function(e){var t=["!","delete"],n=["in","instanceof","==","!=","===","!==","<","<=",">=",">"];e(AST_Node,function(){return!1}),e(AST_UnaryPrefix,function(){return member(this.operator,t)}),e(AST_Binary,function(){return member(this.operator,n)||("&&"==this.operator||"||"==this.operator)&&this.left.is_boolean()&&this.right.is_boolean()}),e(AST_Conditional,function(){return this.consequent.is_boolean()&&this.alternative.is_boolean()}),e(AST_Assign,function(){return"="==this.operator&&this.right.is_boolean()}),e(AST_Seq,function(){return this.cdr.is_boolean()}),e(AST_True,function(){return!0}),e(AST_False,function(){return!0})}(function(e,t){e.DEFMETHOD("is_boolean",t)}),function(e){e(AST_Node,function(){return!1}),e(AST_String,function(){return!0}),e(AST_UnaryPrefix,function(){return"typeof"==this.operator}),e(AST_Binary,function(e){return"+"==this.operator&&(this.left.is_string(e)||this.right.is_string(e))}),e(AST_Assign,function(e){return("="==this.operator||"+="==this.operator)&&this.right.is_string(e)}),e(AST_Seq,function(e){return this.cdr.is_string(e)}),e(AST_Conditional,function(e){return this.consequent.is_string(e)&&this.alternative.is_string(e)}),e(AST_Call,function(e){return e.option("unsafe")&&this.expression instanceof AST_SymbolRef&&"String"==this.expression.name&&this.expression.undeclared()})}(function(e,t){e.DEFMETHOD("is_string",t)}),function(e){function t(e,t){if(!t)throw new Error("Compressor must be passed");return e._eval(t)}AST_Node.DEFMETHOD("evaluate",function(t){if(!t.option("evaluate"))return[this];try{var r=this._eval(t);return[f(n(t,r,this),this),r]}catch(i){if(i!==e)throw i;return[this]}}),e(AST_Statement,function(){throw new Error(string_template("Cannot evaluate a statement [{file}:{line},{col}]",this.start))}),e(AST_Function,function(){throw e}),e(AST_Node,function(){throw e}),e(AST_Constant,function(){return this.getValue()}),e(AST_UnaryPrefix,function(n){var r=this.expression;switch(this.operator){case"!":return!t(r,n);case"typeof":if(r instanceof AST_Function)return"function";if(r=t(r,n),r instanceof RegExp)throw e;return typeof r;case"void":return void t(r,n);case"~":return~t(r,n);case"-":if(r=t(r,n),0===r)throw e;return-r;case"+":return+t(r,n)}throw e}),e(AST_Binary,function(n){var r=this.left,i=this.right;switch(this.operator){case"&&":return t(r,n)&&t(i,n);case"||":return t(r,n)||t(i,n);case"|":return t(r,n)|t(i,n);case"&":return t(r,n)&t(i,n);case"^":return t(r,n)^t(i,n);case"+":return t(r,n)+t(i,n);case"*":return t(r,n)*t(i,n);case"/":return t(r,n)/t(i,n);case"%":return t(r,n)%t(i,n);case"-":return t(r,n)-t(i,n);case"<<":return t(r,n)<<t(i,n);case">>":return t(r,n)>>t(i,n);case">>>":return t(r,n)>>>t(i,n);case"==":return t(r,n)==t(i,n);case"===":return t(r,n)===t(i,n);case"!=":return t(r,n)!=t(i,n);case"!==":return t(r,n)!==t(i,n);case"<":return t(r,n)<t(i,n);case"<=":return t(r,n)<=t(i,n);case">":return t(r,n)>t(i,n);case">=":return t(r,n)>=t(i,n);case"in":return t(r,n)in t(i,n);case"instanceof":return t(r,n)instanceof t(i,n)}throw e}),e(AST_Conditional,function(e){return t(this.condition,e)?t(this.consequent,e):t(this.alternative,e)}),e(AST_SymbolRef,function(n){var r=this.definition();if(r&&r.constant&&r.init)return t(r.init,n);throw e}),e(AST_Dot,function(n){if(n.option("unsafe")&&"length"==this.property){var r=t(this.expression,n);if("string"==typeof r)return r.length}throw e})}(function(e,t){e.DEFMETHOD("_eval",t)}),function(e){function n(e){return t(AST_UnaryPrefix,e,{operator:"!",expression:e})}e(AST_Node,function(){return n(this)}),e(AST_Statement,function(){throw new Error("Cannot negate a statement")}),e(AST_Function,function(){return n(this)}),e(AST_UnaryPrefix,function(){return"!"==this.operator?this.expression:n(this)}),e(AST_Seq,function(e){var t=this.clone();return t.cdr=t.cdr.negate(e),t}),e(AST_Conditional,function(e){var t=this.clone();return t.consequent=t.consequent.negate(e),t.alternative=t.alternative.negate(e),f(n(this),t)}),e(AST_Binary,function(e){var t=this.clone(),r=this.operator;if(e.option("unsafe_comps"))switch(r){case"<=":return t.operator=">",t;case"<":return t.operator=">=",t;case">=":return t.operator="<",t;case">":return t.operator="<=",t}switch(r){case"==":return t.operator="!=",t;case"!=":return t.operator="==",t;case"===":return t.operator="!==",t;case"!==":return t.operator="===",t;case"&&":return t.operator="||",t.left=t.left.negate(e),t.right=t.right.negate(e),f(n(this),t);case"||":return t.operator="&&",t.left=t.left.negate(e),t.right=t.right.negate(e),f(n(this),t)}return n(this)})}(function(e,t){e.DEFMETHOD("negate",function(e){return t.call(this,e)})}),function(e){e(AST_Node,function(){return!0}),e(AST_EmptyStatement,function(){return!1}),e(AST_Constant,function(){return!1}),e(AST_This,function(){return!1}),e(AST_Call,function(e){var t=e.option("pure_funcs");return t?t.indexOf(this.expression.print_to_string())<0:!0}),e(AST_Block,function(e){for(var t=this.body.length;--t>=0;)if(this.body[t].has_side_effects(e))return!0;return!1}),e(AST_SimpleStatement,function(e){return this.body.has_side_effects(e)}),e(AST_Defun,function(){return!0}),e(AST_Function,function(){return!1}),e(AST_Binary,function(e){return this.left.has_side_effects(e)||this.right.has_side_effects(e)}),e(AST_Assign,function(){return!0}),e(AST_Conditional,function(e){return this.condition.has_side_effects(e)||this.consequent.has_side_effects(e)||this.alternative.has_side_effects(e)}),e(AST_Unary,function(e){return"delete"==this.operator||"++"==this.operator||"--"==this.operator||this.expression.has_side_effects(e)}),e(AST_SymbolRef,function(){return!1}),e(AST_Object,function(e){for(var t=this.properties.length;--t>=0;)if(this.properties[t].has_side_effects(e))return!0;return!1}),e(AST_ObjectProperty,function(e){return this.value.has_side_effects(e)}),e(AST_Array,function(e){for(var t=this.elements.length;--t>=0;)if(this.elements[t].has_side_effects(e))return!0;return!1}),e(AST_Dot,function(e){return e.option("pure_getters")?this.expression.has_side_effects(e):!0}),e(AST_Sub,function(e){return e.option("pure_getters")?this.expression.has_side_effects(e)||this.property.has_side_effects(e):!0}),e(AST_PropAccess,function(e){return!e.option("pure_getters")}),e(AST_Seq,function(e){return this.car.has_side_effects(e)||this.cdr.has_side_effects(e)})}(function(e,t){e.DEFMETHOD("has_side_effects",t)}),function(e){function t(){var e=this.body.length;return e>0&&c(this.body[e-1])}e(AST_Statement,function(){return null}),e(AST_Jump,function(){return this}),e(AST_BlockStatement,t),e(AST_SwitchBranch,t),e(AST_If,function(){return this.alternative&&c(this.body)&&c(this.alternative)})}(function(e,t){e.DEFMETHOD("aborts",t)}),e(AST_Directive,function(e){return e.scope.has_directive(e.value)!==e.scope?t(AST_EmptyStatement,e):e}),e(AST_Debugger,function(e,n){return n.option("drop_debugger")?t(AST_EmptyStatement,e):e}),e(AST_LabeledStatement,function(e,n){return e.body instanceof AST_Break&&n.loopcontrol_target(e.body.label)===e.body?t(AST_EmptyStatement,e):0==e.label.references.length?e.body:e}),e(AST_Block,function(e,t){return e.body=a(e.body,t),e}),e(AST_BlockStatement,function(e,n){switch(e.body=a(e.body,n),e.body.length){case 1:return e.body[0];case 0:return t(AST_EmptyStatement,e)}return e}),AST_Scope.DEFMETHOD("drop_unused",function(e){var n=this;if(e.option("unused")&&!(n instanceof AST_Toplevel)&&!n.uses_eval){var r=[],i=new Dictionary,o=this,a=new TreeWalker(function(t,s){if(t!==n){if(t instanceof AST_Defun)return i.add(t.name.name,t),!0;if(t instanceof AST_Definitions&&o===n)return t.definitions.forEach(function(t){t.value&&(i.add(t.name.name,t.value),t.value.has_side_effects(e)&&t.value.walk(a))}),!0;if(t instanceof AST_SymbolRef)return push_uniq(r,t.definition()),!0;if(t instanceof AST_Scope){var f=o;return o=t,s(),o=f,!0}}});n.walk(a);for(var s=0;s<r.length;++s)r[s].orig.forEach(function(e){var t=i.get(e.name);t&&t.forEach(function(e){var t=new TreeWalker(function(e){e instanceof AST_SymbolRef&&push_uniq(r,e.definition())});e.walk(t)})});var f=new TreeTransformer(function(i,o,a){if(i instanceof AST_Lambda&&!(i instanceof AST_Accessor)&&!e.option("keep_fargs"))for(var s=i.argnames,c=s.length;--c>=0;){var l=s[c];if(!l.unreferenced())break;s.pop(),e.warn("Dropping unused function argument {name} [{file}:{line},{col}]",{name:l.name,file:l.start.file,line:l.start.line,col:l.start.col})}if(i instanceof AST_Defun&&i!==n)return member(i.name.definition(),r)?i:(e.warn("Dropping unused function {name} [{file}:{line},{col}]",{name:i.name.name,file:i.name.start.file,line:i.name.start.line,col:i.name.start.col}),t(AST_EmptyStatement,i));if(i instanceof AST_Definitions&&!(f.parent()instanceof AST_ForIn)){var u=i.definitions.filter(function(t){if(member(t.name.definition(),r))return!0;var n={name:t.name.name,file:t.name.start.file,line:t.name.start.line,col:t.name.start.col};return t.value&&t.value.has_side_effects(e)?(t._unused_side_effects=!0,e.warn("Side effects in initialization of unused variable {name} [{file}:{line},{col}]",n),!0):(e.warn("Dropping unused variable {name} [{file}:{line},{col}]",n),!1)});u=mergeSort(u,function(e,t){return!e.value&&t.value?-1:!t.value&&e.value?1:0});for(var _=[],c=0;c<u.length;){var S=u[c];S._unused_side_effects?(_.push(S.value),u.splice(c,1)):(_.length>0&&(_.push(S.value),S.value=AST_Seq.from_array(_),_=[]),++c)}return _=_.length>0?t(AST_BlockStatement,i,{body:[t(AST_SimpleStatement,i,{body:AST_Seq.from_array(_)})]}):null,0!=u.length||_?0==u.length?_:(i.definitions=u,_&&(_.body.unshift(i),i=_),i):t(AST_EmptyStatement,i)}if(i instanceof AST_For&&(o(i,this),i.init instanceof AST_BlockStatement)){var p=i.init.body.slice(0,-1);return i.init=i.init.body.slice(-1)[0].body,p.push(i),a?MAP.splice(p):t(AST_BlockStatement,i,{body:p})}return i instanceof AST_Scope&&i!==n?i:void 0});n.transform(f)}}),AST_Scope.DEFMETHOD("hoist_declarations",function(e){var n=e.option("hoist_funs"),r=e.option("hoist_vars"),i=this;if(n||r){var o=[],a=[],s=new Dictionary,f=0,c=0;i.walk(new TreeWalker(function(e){return e instanceof AST_Scope&&e!==i?!0:e instanceof AST_Var?(++c,!0):void 0})),r=r&&c>1;var l=new TreeTransformer(function(e){if(e!==i){if(e instanceof AST_Directive)return o.push(e),t(AST_EmptyStatement,e);if(e instanceof AST_Defun&&n)return a.push(e),t(AST_EmptyStatement,e);if(e instanceof AST_Var&&r){e.definitions.forEach(function(e){s.set(e.name.name,e),++f});var c=e.to_assignments(),u=l.parent();return u instanceof AST_ForIn&&u.init===e?null==c?e.definitions[0].name:c:u instanceof AST_For&&u.init===e?c:c?t(AST_SimpleStatement,e,{body:c}):t(AST_EmptyStatement,e)}if(e instanceof AST_Scope)return e}});if(i=i.transform(l),f>0){var u=[];if(s.each(function(e,t){i instanceof AST_Lambda&&find_if(function(t){return t.name==e.name.name},i.argnames)?s.del(t):(e=e.clone(),e.value=null,u.push(e),s.set(t,e))}),u.length>0){for(var _=0;_<i.body.length;){if(i.body[_]instanceof AST_SimpleStatement){var S,p,d=i.body[_].body;if(d instanceof AST_Assign&&"="==d.operator&&(S=d.left)instanceof AST_Symbol&&s.has(S.name)){var T=s.get(S.name);if(T.value)break;T.value=d.right,remove(u,T),u.push(T),i.body.splice(_,1);continue}if(d instanceof AST_Seq&&(p=d.car)instanceof AST_Assign&&"="==p.operator&&(S=p.left)instanceof AST_Symbol&&s.has(S.name)){var T=s.get(S.name);if(T.value)break;T.value=p.right,remove(u,T),u.push(T),i.body[_].body=d.cdr;continue}}if(i.body[_]instanceof AST_EmptyStatement)i.body.splice(_,1);else{if(!(i.body[_]instanceof AST_BlockStatement))break;var h=[_,1].concat(i.body[_].body);i.body.splice.apply(i.body,h)}}u=t(AST_Var,i,{definitions:u}),a.push(u)}}i.body=o.concat(a,i.body)}return i}),e(AST_SimpleStatement,function(e,n){return n.option("side_effects")&&!e.body.has_side_effects(n)?(n.warn("Dropping side-effect-free statement [{file}:{line},{col}]",e.start),t(AST_EmptyStatement,e)):e}),e(AST_DWLoop,function(e,n){var r=e.condition.evaluate(n);if(e.condition=r[0],!n.option("loops"))return e;if(r.length>1){if(r[1])return t(AST_For,e,{body:e.body});if(e instanceof AST_While&&n.option("dead_code")){var i=[];return s(n,e.body,i),t(AST_BlockStatement,e,{body:i})}}return e}),e(AST_While,function(e,n){return n.option("loops")?(e=AST_DWLoop.prototype.optimize.call(e,n),e instanceof AST_While&&(l(e,n),e=t(AST_For,e,e).transform(n)),e):e}),e(AST_For,function(e,n){var r=e.condition;if(r&&(r=r.evaluate(n),e.condition=r[0]),!n.option("loops"))return e;if(r&&r.length>1&&!r[1]&&n.option("dead_code")){var i=[];return e.init instanceof AST_Statement?i.push(e.init):e.init&&i.push(t(AST_SimpleStatement,e.init,{body:e.init})),s(n,e.body,i),t(AST_BlockStatement,e,{body:i})}return l(e,n),e}),e(AST_If,function(e,n){if(!n.option("conditionals"))return e;var r=e.condition.evaluate(n);if(e.condition=r[0],r.length>1)if(r[1]){if(n.warn("Condition always true [{file}:{line},{col}]",e.condition.start),n.option("dead_code")){var o=[];return e.alternative&&s(n,e.alternative,o),o.push(e.body),t(AST_BlockStatement,e,{body:o}).transform(n)}}else if(n.warn("Condition always false [{file}:{line},{col}]",e.condition.start),n.option("dead_code")){var o=[];return s(n,e.body,o),e.alternative&&o.push(e.alternative),t(AST_BlockStatement,e,{body:o}).transform(n)}i(e.alternative)&&(e.alternative=null);var a=e.condition.negate(n),l=f(e.condition,a)===a;if(e.alternative&&l){l=!1,e.condition=a;var u=e.body;e.body=e.alternative||t(AST_EmptyStatement),e.alternative=u}if(i(e.body)&&i(e.alternative))return t(AST_SimpleStatement,e.condition,{body:e.condition}).transform(n);if(e.body instanceof AST_SimpleStatement&&e.alternative instanceof AST_SimpleStatement)return t(AST_SimpleStatement,e,{body:t(AST_Conditional,e,{condition:e.condition,consequent:e.body.body,alternative:e.alternative.body})}).transform(n);if(i(e.alternative)&&e.body instanceof AST_SimpleStatement)return l?t(AST_SimpleStatement,e,{body:t(AST_Binary,e,{operator:"||",left:a,right:e.body.body})}).transform(n):t(AST_SimpleStatement,e,{body:t(AST_Binary,e,{operator:"&&",left:e.condition,right:e.body.body})}).transform(n);if(e.body instanceof AST_EmptyStatement&&e.alternative&&e.alternative instanceof AST_SimpleStatement)return t(AST_SimpleStatement,e,{body:t(AST_Binary,e,{operator:"||",left:e.condition,right:e.alternative.body})}).transform(n);if(e.body instanceof AST_Exit&&e.alternative instanceof AST_Exit&&e.body.TYPE==e.alternative.TYPE)return t(e.body.CTOR,e,{value:t(AST_Conditional,e,{condition:e.condition,consequent:e.body.value||t(AST_Undefined,e.body).optimize(n),alternative:e.alternative.value||t(AST_Undefined,e.alternative).optimize(n)})}).transform(n);if(e.body instanceof AST_If&&!e.body.alternative&&!e.alternative&&(e.condition=t(AST_Binary,e.condition,{operator:"&&",left:e.condition,right:e.body.condition}).transform(n),e.body=e.body.body),c(e.body)&&e.alternative){var _=e.alternative;return e.alternative=null,t(AST_BlockStatement,e,{body:[e,_]}).transform(n)}if(c(e.alternative)){var S=e.body;return e.body=e.alternative,e.condition=l?a:e.condition.negate(n),e.alternative=null,t(AST_BlockStatement,e,{body:[e,S]}).transform(n)}return e}),e(AST_Switch,function(e,n){if(0==e.body.length&&n.option("conditionals"))return t(AST_SimpleStatement,e,{body:e.expression}).transform(n);for(;;){var r=e.body[e.body.length-1];if(r){var i=r.body[r.body.length-1];if(i instanceof AST_Break&&o(n.loopcontrol_target(i.label))===e&&r.body.pop(),r instanceof AST_Default&&0==r.body.length){e.body.pop();continue}}break}var a=e.expression.evaluate(n);e:if(2==a.length)try{if(e.expression=a[0],!n.option("dead_code"))break e;var s=a[1],f=!1,l=!1,u=!1,_=!1,S=!1,p=new TreeTransformer(function(r,i,o){if(r instanceof AST_Lambda||r instanceof AST_SimpleStatement)return r;if(r instanceof AST_Switch&&r===e)return r=r.clone(),i(r,this),S?r:t(AST_BlockStatement,r,{body:r.body.reduce(function(e,t){return e.concat(t.body)},[])}).transform(n);if(r instanceof AST_If||r instanceof AST_Try){var a=f;return f=!l,i(r,this),f=a,r}if(r instanceof AST_StatementWithBody||r instanceof AST_Switch){var a=l;return l=!0,i(r,this),l=a,r}if(r instanceof AST_Break&&this.loopcontrol_target(r.label)===e)return f?(S=!0,r):l?r:(_=!0,o?MAP.skip:t(AST_EmptyStatement,r));if(r instanceof AST_SwitchBranch&&this.parent()===e){if(_)return MAP.skip;if(r instanceof AST_Case){var p=r.expression.evaluate(n);if(p.length<2)throw e;return p[1]===s||u?(u=!0,c(r)&&(_=!0),i(r,this),r):MAP.skip}return i(r,this),r}});p.stack=n.stack.slice(),e=e.transform(p)}catch(d){if(d!==e)throw d}return e}),e(AST_Case,function(e,t){return e.body=a(e.body,t),e}),e(AST_Try,function(e,t){return e.body=a(e.body,t),e}),AST_Definitions.DEFMETHOD("remove_initializers",function(){this.definitions.forEach(function(e){e.value=null})}),AST_Definitions.DEFMETHOD("to_assignments",function(){var e=this.definitions.reduce(function(e,n){if(n.value){var r=t(AST_SymbolRef,n.name,n.name);e.push(t(AST_Assign,n,{operator:"=",left:r,right:n.value}))}return e},[]);return 0==e.length?null:AST_Seq.from_array(e)}),e(AST_Definitions,function(e){return 0==e.definitions.length?t(AST_EmptyStatement,e):e}),e(AST_Function,function(e,t){return e=AST_Lambda.prototype.optimize.call(e,t),t.option("unused")&&e.name&&e.name.unreferenced()&&(e.name=null),e}),e(AST_Call,function(e,r){if(r.option("unsafe")){var i=e.expression;if(i instanceof AST_SymbolRef&&i.undeclared())switch(i.name){case"Array":if(1!=e.args.length)return t(AST_Array,e,{elements:e.args}).transform(r);break;case"Object":if(0==e.args.length)return t(AST_Object,e,{properties:[]});break;case"String":if(0==e.args.length)return t(AST_String,e,{value:""});if(e.args.length<=1)return t(AST_Binary,e,{left:e.args[0],operator:"+",right:t(AST_String,e,{value:""})}).transform(r);break;case"Number":if(0==e.args.length)return t(AST_Number,e,{value:0});if(1==e.args.length)return t(AST_UnaryPrefix,e,{expression:e.args[0],operator:"+"}).transform(r);case"Boolean":if(0==e.args.length)return t(AST_False,e);if(1==e.args.length)return t(AST_UnaryPrefix,e,{expression:t(AST_UnaryPrefix,null,{expression:e.args[0],operator:"!"}),operator:"!"}).transform(r);break;case"Function":if(all(e.args,function(e){return e instanceof AST_String}))try{var o="(function("+e.args.slice(0,-1).map(function(e){return e.value}).join(",")+"){"+e.args[e.args.length-1].value+"})()",a=parse(o);a.figure_out_scope({screw_ie8:r.option("screw_ie8")});var s=new Compressor(r.options);a=a.transform(s),a.figure_out_scope({screw_ie8:r.option("screw_ie8")}),a.mangle_names();var c;try{a.walk(new TreeWalker(function(e){if(e instanceof AST_Lambda)throw c=e,a}))}catch(l){if(l!==a)throw l}var u=c.argnames.map(function(n,r){return t(AST_String,e.args[r],{value:n.print_to_string()})}),o=OutputStream();return AST_BlockStatement.prototype._codegen.call(c,c,o),o=o.toString().replace(/^\{|\}$/g,""),u.push(t(AST_String,e.args[e.args.length-1],{value:o})),e.args=u,e}catch(l){if(!(l instanceof JS_Parse_Error))throw console.log(l),l;r.warn("Error parsing code passed to new Function [{file}:{line},{col}]",e.args[e.args.length-1].start),r.warn(l.toString())}}else{if(i instanceof AST_Dot&&"toString"==i.property&&0==e.args.length)return t(AST_Binary,e,{left:t(AST_String,e,{value:""}),operator:"+",right:i.expression}).transform(r);if(i instanceof AST_Dot&&i.expression instanceof AST_Array&&"join"==i.property){var _=0==e.args.length?",":e.args[0].evaluate(r)[1];if(null!=_){var S=i.expression.elements.reduce(function(e,t){if(t=t.evaluate(r),0==e.length||1==t.length)e.push(t);else{var i=e[e.length-1];if(2==i.length){var o=""+i[1]+_+t[1];e[e.length-1]=[n(r,o,i[0]),o]}else e.push(t)}return e},[]);if(0==S.length)return t(AST_String,e,{value:""});if(1==S.length)return S[0][0];if(""==_){var p;return p=S[0][0]instanceof AST_String||S[1][0]instanceof AST_String?S.shift()[0]:t(AST_String,e,{value:""}),S.reduce(function(e,n){return t(AST_Binary,n[0],{operator:"+",left:e,right:n[0]})},p).transform(r)}var d=e.clone();return d.expression=d.expression.clone(),d.expression.expression=d.expression.expression.clone(),d.expression.expression.elements=S.map(function(e){return e[0]}),f(e,d)}}}}return r.option("side_effects")&&e.expression instanceof AST_Function&&0==e.args.length&&!AST_Block.prototype.has_side_effects.call(e.expression,r)?t(AST_Undefined,e).transform(r):r.option("drop_console")&&e.expression instanceof AST_PropAccess&&e.expression.expression instanceof AST_SymbolRef&&"console"==e.expression.expression.name&&e.expression.expression.undeclared()?t(AST_Undefined,e).transform(r):e.evaluate(r)[0]}),e(AST_New,function(e,n){if(n.option("unsafe")){var r=e.expression;if(r instanceof AST_SymbolRef&&r.undeclared())switch(r.name){case"Object":case"RegExp":case"Function":case"Error":case"Array":return t(AST_Call,e,e).transform(n)}}return e}),e(AST_Seq,function(e,n){if(!n.option("side_effects"))return e;if(!e.car.has_side_effects(n)){var r;if(!(e.cdr instanceof AST_SymbolRef&&"eval"==e.cdr.name&&e.cdr.undeclared()&&(r=n.parent())instanceof AST_Call&&r.expression===e))return e.cdr}if(n.option("cascade")){if(e.car instanceof AST_Assign&&!e.car.left.has_side_effects(n)){if(e.car.left.equivalent_to(e.cdr))return e.car;if(e.cdr instanceof AST_Call&&e.cdr.expression.equivalent_to(e.car.left))return e.cdr.expression=e.car,e.cdr}if(!e.car.has_side_effects(n)&&!e.cdr.has_side_effects(n)&&e.car.equivalent_to(e.cdr))return e.car}return e.cdr instanceof AST_UnaryPrefix&&"void"==e.cdr.operator&&!e.cdr.expression.has_side_effects(n)?(e.cdr.operator=e.car,e.cdr):e.cdr instanceof AST_Undefined?t(AST_UnaryPrefix,e,{operator:"void",expression:e.car}):e}),AST_Unary.DEFMETHOD("lift_sequences",function(e){if(e.option("sequences")&&this.expression instanceof AST_Seq){var t=this.expression,n=t.to_array();return this.expression=n.pop(),n.push(this),t=AST_Seq.from_array(n).transform(e)}return this}),e(AST_UnaryPostfix,function(e,t){return e.lift_sequences(t)}),e(AST_UnaryPrefix,function(e,n){e=e.lift_sequences(n);var r=e.expression;if(n.option("booleans")&&n.in_boolean_context()){switch(e.operator){case"!":if(r instanceof AST_UnaryPrefix&&"!"==r.operator)return r.expression;break;case"typeof":return n.warn("Boolean expression always true [{file}:{line},{col}]",e.start),t(AST_True,e)}r instanceof AST_Binary&&"!"==e.operator&&(e=f(e,r.negate(n)))}return e.evaluate(n)[0]}),AST_Binary.DEFMETHOD("lift_sequences",function(e){if(e.option("sequences")){if(this.left instanceof AST_Seq){var t=this.left,n=t.to_array();return this.left=n.pop(),n.push(this),t=AST_Seq.from_array(n).transform(e)
}if(this.right instanceof AST_Seq&&this instanceof AST_Assign&&!u(this.left,e)){var t=this.right,n=t.to_array();return this.right=n.pop(),n.push(this),t=AST_Seq.from_array(n).transform(e)}}return this});var S=makePredicate("== === != !== * & | ^");e(AST_Binary,function(e,n){var r=n.has_directive("use asm")?noop:function(t,r){if(r||!e.left.has_side_effects(n)&&!e.right.has_side_effects(n)){t&&(e.operator=t);var i=e.left;e.left=e.right,e.right=i}};if(S(e.operator)&&(e.right instanceof AST_Constant&&!(e.left instanceof AST_Constant)&&(e.left instanceof AST_Binary&&PRECEDENCE[e.left.operator]>=PRECEDENCE[e.operator]||r(null,!0)),/^[!=]==?$/.test(e.operator))){if(e.left instanceof AST_SymbolRef&&e.right instanceof AST_Conditional){if(e.right.consequent instanceof AST_SymbolRef&&e.right.consequent.definition()===e.left.definition()){if(/^==/.test(e.operator))return e.right.condition;if(/^!=/.test(e.operator))return e.right.condition.negate(n)}if(e.right.alternative instanceof AST_SymbolRef&&e.right.alternative.definition()===e.left.definition()){if(/^==/.test(e.operator))return e.right.condition.negate(n);if(/^!=/.test(e.operator))return e.right.condition}}if(e.right instanceof AST_SymbolRef&&e.left instanceof AST_Conditional){if(e.left.consequent instanceof AST_SymbolRef&&e.left.consequent.definition()===e.right.definition()){if(/^==/.test(e.operator))return e.left.condition;if(/^!=/.test(e.operator))return e.left.condition.negate(n)}if(e.left.alternative instanceof AST_SymbolRef&&e.left.alternative.definition()===e.right.definition()){if(/^==/.test(e.operator))return e.left.condition.negate(n);if(/^!=/.test(e.operator))return e.left.condition}}}if(e=e.lift_sequences(n),n.option("comparisons"))switch(e.operator){case"===":case"!==":(e.left.is_string(n)&&e.right.is_string(n)||e.left.is_boolean()&&e.right.is_boolean())&&(e.operator=e.operator.substr(0,2));case"==":case"!=":e.left instanceof AST_String&&"undefined"==e.left.value&&e.right instanceof AST_UnaryPrefix&&"typeof"==e.right.operator&&n.option("unsafe")&&(e.right.expression instanceof AST_SymbolRef&&e.right.expression.undeclared()||(e.right=e.right.expression,e.left=t(AST_Undefined,e.left).optimize(n),2==e.operator.length&&(e.operator+="=")))}if(n.option("booleans")&&n.in_boolean_context())switch(e.operator){case"&&":var i=e.left.evaluate(n),o=e.right.evaluate(n);if(i.length>1&&!i[1]||o.length>1&&!o[1])return n.warn("Boolean && always false [{file}:{line},{col}]",e.start),t(AST_False,e);if(i.length>1&&i[1])return o[0];if(o.length>1&&o[1])return i[0];break;case"||":var i=e.left.evaluate(n),o=e.right.evaluate(n);if(i.length>1&&i[1]||o.length>1&&o[1])return n.warn("Boolean || always true [{file}:{line},{col}]",e.start),t(AST_True,e);if(i.length>1&&!i[1])return o[0];if(o.length>1&&!o[1])return i[0];break;case"+":var i=e.left.evaluate(n),o=e.right.evaluate(n);if(i.length>1&&i[0]instanceof AST_String&&i[1]||o.length>1&&o[0]instanceof AST_String&&o[1])return n.warn("+ in boolean context always true [{file}:{line},{col}]",e.start),t(AST_True,e)}if(n.option("comparisons")){if(!(n.parent()instanceof AST_Binary)||n.parent()instanceof AST_Assign){var a=t(AST_UnaryPrefix,e,{operator:"!",expression:e.negate(n)});e=f(e,a)}switch(e.operator){case"<":r(">");break;case"<=":r(">=")}}return"+"==e.operator&&e.right instanceof AST_String&&""===e.right.getValue()&&e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.is_string(n)?e.left:(n.option("evaluate")&&"+"==e.operator&&(e.left instanceof AST_Constant&&e.right instanceof AST_Binary&&"+"==e.right.operator&&e.right.left instanceof AST_Constant&&e.right.is_string(n)&&(e=t(AST_Binary,e,{operator:"+",left:t(AST_String,null,{value:""+e.left.getValue()+e.right.left.getValue(),start:e.left.start,end:e.right.left.end}),right:e.right.right})),e.right instanceof AST_Constant&&e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.right instanceof AST_Constant&&e.left.is_string(n)&&(e=t(AST_Binary,e,{operator:"+",left:e.left.left,right:t(AST_String,null,{value:""+e.left.right.getValue()+e.right.getValue(),start:e.left.right.start,end:e.right.end})})),e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.is_string(n)&&e.left.right instanceof AST_Constant&&e.right instanceof AST_Binary&&"+"==e.right.operator&&e.right.left instanceof AST_Constant&&e.right.is_string(n)&&(e=t(AST_Binary,e,{operator:"+",left:t(AST_Binary,e.left,{operator:"+",left:e.left.left,right:t(AST_String,null,{value:""+e.left.right.getValue()+e.right.left.getValue(),start:e.left.right.start,end:e.right.left.end})}),right:e.right.right}))),e.right instanceof AST_Binary&&e.right.operator==e.operator&&("*"==e.operator||"&&"==e.operator||"||"==e.operator)?(e.left=t(AST_Binary,e.left,{operator:e.operator,left:e.left,right:e.right.left}),e.right=e.right.right,e.transform(n)):e.evaluate(n)[0])}),e(AST_SymbolRef,function(e,r){if(e.undeclared()){var i=r.option("global_defs");if(i&&i.hasOwnProperty(e.name))return n(r,i[e.name],e);switch(e.name){case"undefined":return t(AST_Undefined,e);case"NaN":return t(AST_NaN,e);case"Infinity":return t(AST_Infinity,e)}}return e}),e(AST_Undefined,function(e,n){if(n.option("unsafe")){var r=n.find_parent(AST_Scope),i=r.find_variable("undefined");if(i){var o=t(AST_SymbolRef,e,{name:"undefined",scope:r,thedef:i});return o.reference(),o}}return e});var p=["+","-","/","*","%",">>","<<",">>>","|","^","&"];e(AST_Assign,function(e,t){return e=e.lift_sequences(t),"="==e.operator&&e.left instanceof AST_SymbolRef&&e.right instanceof AST_Binary&&e.right.left instanceof AST_SymbolRef&&e.right.left.name==e.left.name&&member(e.right.operator,p)&&(e.operator=e.right.operator+"=",e.right=e.right.right),e}),e(AST_Conditional,function(e,n){if(!n.option("conditionals"))return e;if(e.condition instanceof AST_Seq){var r=e.condition.car;return e.condition=e.condition.cdr,AST_Seq.cons(r,e)}var i=e.condition.evaluate(n);if(i.length>1)return i[1]?(n.warn("Condition always true [{file}:{line},{col}]",e.start),e.consequent):(n.warn("Condition always false [{file}:{line},{col}]",e.start),e.alternative);var o=i[0].negate(n);f(i[0],o)===o&&(e=t(AST_Conditional,e,{condition:o,consequent:e.alternative,alternative:e.consequent}));var a=e.consequent,s=e.alternative;if(a instanceof AST_Assign&&s instanceof AST_Assign&&a.operator==s.operator&&a.left.equivalent_to(s.left))return t(AST_Assign,e,{operator:a.operator,left:a.left,right:t(AST_Conditional,e,{condition:e.condition,consequent:a.right,alternative:s.right})});if(a instanceof AST_Call&&s.TYPE===a.TYPE&&a.args.length==s.args.length&&a.expression.equivalent_to(s.expression)){if(0==a.args.length)return t(AST_Seq,e,{car:e.condition,cdr:a});if(1==a.args.length)return a.args[0]=t(AST_Conditional,e,{condition:e.condition,consequent:a.args[0],alternative:s.args[0]}),a}return a instanceof AST_Conditional&&a.alternative.equivalent_to(s)?t(AST_Conditional,e,{condition:t(AST_Binary,e,{left:e.condition,operator:"&&",right:a.condition}),consequent:a.consequent,alternative:s}):e}),e(AST_Boolean,function(e,n){if(n.option("booleans")){var r=n.parent();return r instanceof AST_Binary&&("=="==r.operator||"!="==r.operator)?(n.warn("Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]",{operator:r.operator,value:e.value,file:r.start.file,line:r.start.line,col:r.start.col}),t(AST_Number,e,{value:+e.value})):t(AST_UnaryPrefix,e,{operator:"!",expression:t(AST_Number,e,{value:1-e.value})})}return e}),e(AST_Sub,function(e,n){var r=e.property;if(r instanceof AST_String&&n.option("properties")){if(r=r.getValue(),RESERVED_WORDS(r)?n.option("screw_ie8"):is_identifier_string(r))return t(AST_Dot,e,{expression:e.expression,property:r}).optimize(n);var i=parseFloat(r);isNaN(i)||i.toString()!=r||(e.property=t(AST_Number,e.property,{value:i}))}return e}),e(AST_Dot,function(e,t){return e.evaluate(t)[0]}),e(AST_Array,_),e(AST_Object,_),e(AST_RegExp,_)}();


var default_options = {};
function uglify(code, options) {
	// Create copies of the options
	var parse_options = defaults({}, options.parse);
	var compress_options = defaults({}, options.compress);
	var output_options = defaults({}, options.output);

	parse_options = defaults(parse_options, default_options.parse, true);
	compress_options = defaults(compress_options, default_options.compress, true);
	output_options = defaults(output_options, default_options.output, true);

	var tab = "        ";
	print(tab+"Parsing...");

	// 1. Parse
	var toplevel_ast = parse(code, parse_options);
	toplevel_ast.figure_out_scope();

	print(tab+"DONE.\n");
	print(tab+"Compressing...");

	// 2. Compress
	var compressor = new Compressor(compress_options);
	var compressed_ast = toplevel_ast.transform(compressor);

	print(tab+"DONE.\n");
	print(tab+"Mangling...");

	// 3. Mangle
	compressed_ast.figure_out_scope();
	compressed_ast.compute_char_frequency();
	compressed_ast.mangle_names();

	print(tab+"DONE.\n");
	print(tab+"Generating output...");

	// 4. Generate output
	code = compressed_ast.print_to_string(output_options);
	print(tab+"DONE.\n");

	return code;
}
